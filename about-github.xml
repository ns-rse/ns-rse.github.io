<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>blog.nshephard.dev</title>
<link>https://blog.nshephard.dev/about.html#category=github</link>
<atom:link href="https://blog.nshephard.dev/about-github.xml" rel="self" type="application/rss+xml"/>
<description>Software development in a Research Environment</description>
<image>
<url>https://blog.nshephard.dev/img/profile.jpg</url>
<title>blog.nshephard.dev</title>
<link>https://blog.nshephard.dev/about.html#category=github</link>
</image>
<generator>quarto-1.6.11</generator>
<lastBuildDate>Tue, 10 Jun 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Debugging GitHub Actions with tmate</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/tmate/</link>
  <description><![CDATA[ 





<p>If you work with remote computer systems regularly you are probably familiar with <a href="privacy_ssh.md" target="_blank">SSH</a> for making your connections. You might also have come across <a href="https://github.com/tmux/tmux/wiki" target="_blank">tmux</a>, its fork<a href="https://tmate.io/" target="_blank">tmate</a> or the GNU programme <a href="https://www.gnu.org/software/screen/" target="_blank">screen</a> all of which allow you to maintain and/or share a session on a remote system.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://live.staticflickr.com/65535/54529600682_763b548c4f_k.jpg" class="img-fluid figure-img"></p>
<figcaption><a href="https://www.flickr.com/photos/slackline/54529600682/in/datetaken/" target="_blank">Returning from Bowfell Buttress by Me</a></figcaption>
</figure>
</div>
<p>The ability to connect remotely to a machine is invaluable, but what does that have to do with debugging GitHub Actions? You have your development environment on your local computer where you have made sure all tests pass and the documentation builds. Well often tests are run on a multitiude of operating systems and you may not always have access to these locally, even with the availability of emulators, for example licensing issues may prevent you from emulating some systems.</p>
<p>This is where <code>tmate</code> comes in handy because there is a <a href="github_actions.md" target="_blank">GitHub Actions</a> which sets up <code>tmate</code> on the runner that was spun on the GitHub servers and if you’ve setup your SSH keys correctly then you can connect to this machine and set about debugging errors.</p>
<p>The <a href="https://mxschmitt.github.io/action-tmate/" target="_blank">official documentation</a> is comprehensive and well written and I would recommend you read through it if you want to know more. Here I give a brief overview of how I use <code>tmate</code> in my work. Its pretty basic but has been invaluable.</p>
<section id="setup-and-configuration" class="level2">
<h2 class="anchored" data-anchor-id="setup-and-configuration">Setup and Configuration</h2>
<section id="ssh-keys" class="level3">
<h3 class="anchored" data-anchor-id="ssh-keys">SSH Keys</h3>
<p>It is essential that you have your public SSH key stored in your GitHub account. A while back GitHub started enforcing this for development so chances are you have already got this setup, if not follow the instructions . GitHub have an excellent series of posts on <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/" target="_blank">connecting to GitHub with SSH</a>.</p>
<p>Work through those if you need to setup SSH. Once you have setup your SSH keys you are ready to add the <code>tmate</code> step to your GitHub Action.</p>
</section>
<section id="testing-on-multiple-oss-and-versions" class="level3">
<h3 class="anchored" data-anchor-id="testing-on-multiple-oss-and-versions">Testing on multiple OS’s and versions</h3>
<p>You can configure your GitHub Action to run on a range of operating systems by setting up single or multi-dimension <code>matrix</code> under the <code>strategy</code>. The example below<sup>1</sup> tests multiple operating systems and multiple versions of Python.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Test (${{ matrix.python-version }}, ${{ matrix.os }})</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.os }}</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">os</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu-22.04"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu-20.04"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu-latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macos-latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"windows-latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">python-version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.10"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.11"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.12"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.13"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v4</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Set up Python</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/setup-python@v5</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">python-version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.python-version }}</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    ...</span></span></code></pre></div>
</section>
<section id="tmate-github-action" class="level3">
<h3 class="anchored" data-anchor-id="tmate-github-action"><code>tmate</code> GitHub Action</h3>
<p>To use <code>tmate</code> to debug your workflow you need to add the <a href="https://mxschmitt.github.io/action-tmate/" target="_blank">action-tmate</a> to the <code>.github/workflows/&lt;action&gt;.yaml</code> you wish to debug. There are a lot of options available but a very basic configuration is shown below and you should add this as the last step in your workflow.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  ...</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Setup tmate session</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ failure() }}</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mxschmitt/action-tmate@v3</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeout-minutes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span></code></pre></div>
<p>This will use the <code>mxschmitt/action-tmate</code> step <em>only</em> if there is a failure and will make the SSH session on the runner available for just 5 minutes. Its quite likely that it will take me than 5 minutes to work out what is causing the error and so after have encountered an error I typically increase this amount to allow me longer to work on debugging the problem.</p>
</section>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>Once you have staged and committed the changes to you have made to your workflow to include the <code>action-tmate</code> step using it is pretty straight-forward. If everything runs ok you will see this in your workflows log because the step only runs on failure.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/tmate/img/tmate_skipped.png" class="img-fluid figure-img"></p>
<figcaption>No errors so the tmate action did not run</figcaption>
</figure>
</div>
<p>If however there <em>is</em> a failure in one of the preceding steps of your workflow then the <code>tmate</code> job kicks in and you will see the following in your jobs logs.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/tmate/img/tmate_kicks_in.png" class="img-fluid figure-img"></p>
<figcaption><code>tmate</code> kicks in on failure of a preceding job</figcaption>
</figure>
</div>
<p>The key bit of information here are the lines at the bottom which are repeated…</p>
<pre class="shell"><code>2025-06-03T15:29:21.4815179Z openssh-client is already the newest version (1:9.6p1-3ubuntu13.11).
2025-06-03T15:29:21.4816354Z xz-utils is already the newest version (5.6.1+really5.4.5-1ubuntu0.2).
2025-06-03T15:29:21.4817296Z 0 upgraded, 0 newly installed, 0 to remove and 28 not upgraded.
2025-06-03T15:29:22.4080716Z ssh 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io
2025-06-03T15:29:22.4113791Z
2025-06-03T15:29:22.4125076Z SSH: ssh 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io
2025-06-03T15:29:22.4125623Z or: ssh -i &lt;path-to-private-SSH-key&gt; 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io
2025-06-03T15:29:27.4141023Z SSH: ssh 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io
2025-06-03T15:29:27.4141669Z or: ssh -i &lt;path-to-private-SSH-key&gt; 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io</code></pre>
<p>These messages are shown after the <code>mxschmitt/action-tmate</code> job has installed <code>tmate</code> on the GitHub runner (/remote server) and it is now available for you to connect to using SSH. If you have your SSH key loaded in a <a href="https://www.funtoo.org/Funtoo:Keychain" target="_blank">Keychain</a><sup>2</sup> or other SSH key manager then you can use the first form.</p>
<pre class="shell"><code>ssh 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io</code></pre>
<p>If you get a <code>Permission Denied</code> error then try the second form, substituting <code>&lt;path-to-private-SSH-key&gt;</code> for the private key that corresponds to the one you have on your GitHub account.</p>
<pre class="shell"><code>ssh -i &lt;path-to-private-SSH-key&gt; 7Nus3JTkxyGCmscUBKKV8fp3z@nyc1.tmate.io</code></pre>
<p>Once connected you have all the tools in the current version of the host operating system along with those your job installed, including the package and its dependencies you are testing or using in the workflow that has failed (remember this is the machine on which the job failed and your workflow sets up the environment for testing/building <span class="emoji" data-emoji="wink">😉</span>).</p>
<p>You can now set about debugging why the job failed in more detail. You may want to run <code>pytest --lf -x</code> to re-run the last failed jobs and start poking around. If you use <a href="https://docs.python.org/3/library/pdb.html" target="_blank"><code>pdb</code></a> to debug then you can add <code>breakpoint()</code> at the point you want to start debugging.</p>
<p>Astute readers will have noticed that you are time-limited as the configuration for this step in the workflow specified <code>timeout-minutes: 5</code> which means the runner and your SSH connection will terminate after five minutes. Typically it’s going to take you longer to solve your problem so you should tweak your <code>/.github/workflow/&lt;job&gt;.yaml</code> to increase this value on your local copy, commit and push the changes to your remote branch on GitHub where they will trigger another run of your jobs which should fail and you will have longer to spend connected debugging. Once you’ve solved the problem reduce it back to a few minutes.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Being able to remotely connect to GitHub runners allows you to investigate what went wrong quickly on operating systems you may not have at your disposal locally. Its a quick and efficient way to investigate in finer detail why tests and builds might be failing on a specific operating system or version of the software you are testing.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://github.com/mxschmitt/action-tmate" target="_blank">mxschmitt/action-tmate</a> GitHub page for the <code>tmate</code> action.</li>
<li><a href="https://mxschmitt.github.io/action-tmate/" target="_blank">Debug your GitHub Actions by using tmate | action-tmate</a> documentation for the <code>tmate</code> action.</li>
<li><a href="https://github.com/lhotari/action-upterm" target="_blank">lhotari/action-upterm</a> a fork of the <code>tmate</code> action.</li>
</ul>
<section id="ssh-and-github" class="level3">
<h3 class="anchored" data-anchor-id="ssh-and-github">SSH and GitHub</h3>
<ul>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys" target="_blank">Check for existing SSH keys</a></li>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank">Generating a new SSH key and adding it to the ssh-agent</a></li>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account" target="_blank">Adding a new SSH key to your GitHub account</a></li>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/testing-your-ssh-connection" target="_blank">Testing your SSH connection</a></li>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases" target="_blank">Working with SSH key passphrases</a></li>
<li><a href="https://www.funtoo.org/Funtoo:Keychain" target="_blank">Keychain Project</a></li>
</ul>



</section>
</section>


<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This is based on the <a href="https://github.com/AFM-SPM/TopoStats/blob/main/.github/workflows/tests.yaml" target="_blank">TopoStats <code>tests.yaml</code></a> package that I work on.↩︎</p></li>
<li id="fn2"><p>Keychain’s are a convenience programmes for managing <code>ssh-agent</code> that are long-running. They mean you can enter your SSH password once, typically on login, and your private keys are held in memory and used whenever you attempt to connect via SSH to a remote machine.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2025,
  author = {Shephard, Neil},
  title = {Debugging {GitHub} {Actions} with Tmate},
  date = {2025-06-10},
  url = {https://blog.nshephard.dev/posts/tmate/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2025" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2025. <span>“Debugging GitHub Actions with
Tmate.”</span> June 10, 2025. <a href="https://blog.nshephard.dev/posts/tmate/">https://blog.nshephard.dev/posts/tmate/</a>.
</div></div></section></div> ]]></description>
  <category>git</category>
  <category>version control</category>
  <category>github</category>
  <category>tmate</category>
  <category>ssh</category>
  <guid>https://blog.nshephard.dev/posts/tmate/</guid>
  <pubDate>Tue, 10 Jun 2025 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/54529600682_763b548c4f_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Quarto Custom domain on GitHub Pages</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/quarto-cname/</link>
  <description><![CDATA[ 





<p>This blog is published using the excellent <a href="https://quarto.org/" target="_blank">Quarto</a> framework to <a href="https://pages.github.com/" target="_blank">GitHub Pages</a> which offers free website hosting. However, astute readers familiar with this sort of setup will have noticed that the domain is no the usual <code>[github-user].github.io</code> and instead it resolves to <code>blog.nshephard.dev</code>. This post explains how to achieve that as it took me a little bit of work to sort out properly.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://live.staticflickr.com/65535/54121847365_b57db38358_k.jpg" class="img-fluid figure-img"></p>
<figcaption><a href="https://www.flickr.com/photos/slackline/54121847365/" target="_blank">The Bernia Ridge by Me</a></figcaption>
</figure>
</div>
<section id="why" class="level2">
<h2 class="anchored" data-anchor-id="why">Why?</h2>
<p>I found that despite setting a custom domain in the GitHub pages Settings (<em>Settings &gt; Pages &gt; Custom domain</em>) each time I published the site (e.g.&nbsp;on a new blog post) the <code>CNAME</code> file disappeared from the <code>gh-pages</code> branch and the domain didn’t resolve. I searched but couldn’t find a solution to this so raised an <a href="https://github.com/quarto-dev/quarto-actions/issues/118" target="_blank">issue</a> to include it in the <code>quarto-actions</code>.</p>
<p>In the meantime I added a custom step to the <code>publish.yaml</code> to add the <code>CNAME</code> file to the <code>gh-pages</code> branch after <code>Render and Publish</code> which worked, but I was subsequently pointed to a cleaner existing way of achieving the same result.</p>
</section>
<section id="what-isnt-covered" class="level2">
<h2 class="anchored" data-anchor-id="what-isnt-covered">What isn’t covered</h2>
<p>This post doesn’t cover…</p>
<ul>
<li>How to setup a blog/website using Quarto.</li>
<li>How to write Quarto Markdown.</li>
<li>How to publish a blog or website using Quarto, they have <a href="https://github.com/quarto-dev/quarto-actions" target="_blank">excellent documentation</a></li>
<li>Setting a <code>CNAME</code> with your DNS registrar.</li>
</ul>
<p>On this last point, how you set your <code>CNAME</code> to redirect your custom domain to that of the GitHub Pages is dependent on the domain registrar service you use. I use <a href="https://www.ovhcloud.com/en-gb/" target="_blank">OVH</a>.</p>
</section>
<section id="what-is-covered" class="level2">
<h2 class="anchored" data-anchor-id="what-is-covered">What is covered</h2>
<ul>
<li>How to add a <code>CNAME</code> file to the <code>gh-pages</code> branch that is produced by the <a href="https://github.com/quarto-dev/quarto-actions" target="_blank"><code>quarto-dev/quarto-actions/publish</code> GitHub Action</a> so that the pages resolve to a custom domain.</li>
</ul>
</section>
<section id="the-problem" class="level2">
<h2 class="anchored" data-anchor-id="the-problem">The Problem</h2>
<p>If you use plain <a href="https://pages.github.com/" target="_blank">GitHub Pages</a> then you can set a custom <code>CNAME</code> by going to <em>Settings &gt; Pages &gt; Custom Domain</em> and entering the address there. However, as <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain" target="_blank">documented</a> (see item 4) this doesn’t work if you use a custom GitHub Action to publish your website, which is the case when you use the <a href="https://github.com/quarto-dev/quarto-actions" target="_blank"><code>quarto-dev/quarto-actions/publish</code> GitHub Action</a> to publish using Quarto.</p>
<p>Why? Because each time the action runs it regenerates the content of the <code>gh-pages</code> branch on the runner and pushes it to your repository and <em>doesn’t</em> include a custom <code>CNAME</code> file.</p>
</section>
<section id="solution-1" class="level2">
<h2 class="anchored" data-anchor-id="solution-1">Solution 1</h2>
<p>The solution I initially hit upon was to add an extra step to my <code>.github/workflows/publish.yaml</code> that…</p>
<ol type="1">
<li>Checks out the <code>gh-pages</code> branch.</li>
<li>Creates the <code>CNAME</code> file with the domain I use.</li>
<li>Adds this to the <code>gh-pages</code> branch.</li>
<li>Pushes back up-stream.</li>
</ol>
<p>You should already have added a <a href="https://github.com/quarto-dev/quarto-actions" target="_blank">publish action</a> to your repository which runs the <a href="https://github.com/quarto-dev/quarto-actions" target="_blank"><code>quarto-dev/quarto-actions/publish</code> GitHub Action</a>. This runs <code>quarto publish $TARGET</code> where <code>$TARGET</code> is set by the chosen output configured in the <code>target</code> argument. In this example <code>gh-pages</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Render and Publish</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> quarto-dev/quarto-actions/publish@v2</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">target</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gh-pages</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GITHUB_TOKEN</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ secrets.GITHUB_TOKEN }}</span></span></code></pre></div>
<p>After this you should add the following, substituting <code>blog.nshephard.dev</code> for your own domain.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Add CNAME file to gh-pages branch</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-3">          rm renv/activate.R</span>
<span id="cb2-4">          git switch gh-pages</span>
<span id="cb2-5">          git pull</span>
<span id="cb2-6">          echo 'blog.nshephard.dev &gt; CNAME</span>
<span id="cb2-7">          git add CNAME</span>
<span id="cb2-8">          git commit -m "Adding CNAME"</span>
<span id="cb2-9">          git push</span></code></pre></div>
<p>This…</p>
<ol type="1">
<li>Removes the lingering <code>renv/activate.R</code> which prevents switching branches.</li>
<li>Switches branches to <code>gh-pages</code>.</li>
<li><code>git pull</code> to get the just published version of the branch.</li>
<li>Creates the <code>CNAME</code> file with the domain you specify.</li>
<li>Adds (stages) the <code>CNAME</code> file to the <code>gh-pages</code> branch.</li>
<li>Commits the change.</li>
<li>Pushes the commit to <code>origin</code> (i.e.&nbsp;the <code>gh-pages</code> branch on GitHub)</li>
</ol>
<p>This worked as the <code>CNAME</code> file is added each time the workflow runs but, unsurprisingly, there is a simpler solution.</p>
</section>
<section id="solution-2---the-correct-way-of-doing-this" class="level2">
<h2 class="anchored" data-anchor-id="solution-2---the-correct-way-of-doing-this">Solution 2 - The correct way of doing this</h2>
<p>Turns out the <a href="https://github.com/quarto-dev/quarto-actions/issues/118#issuecomment-2445375569" target="_blank">answer</a> provided by <code>@cscheid</code> is, unsurprisingly, much simpler.</p>
<p>You need to add <code>CNAME</code> in the <code>_quarto.yaml</code> so that it is included in the project.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    ...</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CNAME"</span></span></code></pre></div>
<p>You <em>also</em> have to create and add the <code>CNAME</code> file with your domain to the repository.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blog.nshephard.dev` &gt; CNAME</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">git add CNAME _quarto.yaml</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">git commit -m "Adding CNAME to repository"</span></span>
<span id="cb4-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">git push</span></span></code></pre></div>
<p>Then, because it’s included in the resources, the file will carry through/persist when the publishing action runs to create the <code>gh-pages</code> branch with each new update and run on GitHub Actions :magic:.</p>
</section>
<section id="related" class="level2">
<h2 class="anchored" data-anchor-id="related">Related</h2>
<p>This feature was introduced in <a href="https://quarto.org/docs/download/changelog/1.2/index.html#publishing" target="_blank">Quarto 1.2</a> and others have encountered <a href="https://stackoverflow.com/questions/79172839/quarto-publish-resets-cname" target="_blank">problems</a> with the file being deleted on first running <code>quarto publish gh-pages</code> (if you’re having problems perhaps worth keeping an eye on that thread).</p>
<p>There is a <a href="https://github.com/quarto-dev/quarto-web/pull/1091/files" target="_blank">draft Pull Request</a> to add it to the documentation its not been merged which is perhaps why I couldn’t find how to do this in the documentation (see also discussion in <a href="https://github.com/quarto-dev/quarto-cli/issues/4941" target="_blank">this issue</a>).</p>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2024,
  author = {Shephard, Neil},
  title = {Quarto {Custom} Domain on {GitHub} {Pages}},
  date = {2024-11-14},
  url = {https://blog.nshephard.dev/posts/quarto-cname/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2024" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2024. <span>“Quarto Custom Domain on GitHub
Pages.”</span> November 14, 2024. <a href="https://blog.nshephard.dev/posts/quarto-cname/">https://blog.nshephard.dev/posts/quarto-cname/</a>.
</div></div></section></div> ]]></description>
  <category>quarto</category>
  <category>github</category>
  <category>website</category>
  <category>domain</category>
  <guid>https://blog.nshephard.dev/posts/quarto-cname/</guid>
  <pubDate>Thu, 14 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/54121847365_b57db38358_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Git Remotes Revisited</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/git-remotes-revisited/</link>
  <description><![CDATA[ 





<p>I’ve written before about <a href="https://ns-rse.github.io/posts/git-remotes/" target="_blank">Git Remotes</a> but in my on-going effort to improve my understanding of the tools I use daily I’ve discovered that it is possible to have a single <code>remote</code> push to two different URLs so am revisiting the topic and perhaps writing a little more clearly on it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://live.staticflickr.com/65535/53494024371_1eecc0b722_k.jpg" class="img-fluid figure-img"></p>
<figcaption><a href="https://www.flickr.com/photos/slackline/53494024371/in/datetaken/" target="_blank">Microcosmos by Me</a></figcaption>
</figure>
</div>
<p><a href="https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes" target="_blank">Remotes</a> are where other copies of your repository exist and typically where collaboration occurs (i.e.&nbsp;issue tracking, merge requests, bug reports etc.).</p>
<p>The main remote that a repository is configured to use by default is called <code>origin</code> but it is possible to have multiple remotes tracked by your local copy.</p>
<section id="listing-remotes" class="level2">
<h2 class="anchored" data-anchor-id="listing-remotes">Listing Remotes</h2>
<p>List remotes with <code>git remote [-v]</code> the <code>-v</code> flag will show the URLs that are stored for the short-cut.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> forgejo@forgejo.hopto.org:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> forgejo@forgejo.hopto.org:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span> git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span> git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>You can get more information about a remote using <code>git remote show origin</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote show origin</span>
<span id="cb2-2"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*</span> remote origin</span>
<span id="cb2-3">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fetch</span> URL: git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb2-4">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Push</span>  URL: git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb2-5">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HEAD</span> branch: main</span>
<span id="cb2-6">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Remote</span> branches:</span>
<span id="cb2-7">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span>                                                tracked</span>
<span id="cb2-8">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">refs/merge-requests/18/head</span>                         new <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">next</span> fetch will store in remotes/origin</span>
<span id="cb2-9">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">refs/pullreqs/15</span>                                    stale <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">use</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git remote prune'</span> to remove<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-10">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">refs/remotes/origin/nshephard/update-pre-commit</span>     stale <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">use</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git remote prune'</span> to remove<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-11">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">refs/remotes/origin/nshephard/update-readme</span>         stale <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">use</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git remote prune'</span> to remove<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-12">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Local</span> branches configured for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git pull'</span>:</span>
<span id="cb2-13">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span>                            merges with remote main</span>
<span id="cb2-14">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nshephard/fix-mtime</span>             merges with remote nshephard/fix-mtime</span>
<span id="cb2-15">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nshephard/update-pre-commit</span>     merges with remote nshephard/update-pre-commit</span>
<span id="cb2-16">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Local</span> ref configured for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git push'</span>:</span>
<span id="cb2-17">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span> pushes to main <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">out</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">of</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>This can be useful to show you what you need to tidy up if there are lots of stale branches around. In this example I can run <code>git remote prune origin</code> as advised to remove these.</p>
<section id="default-remote" class="level3">
<h3 class="anchored" data-anchor-id="default-remote">Default Remote</h3>
<p>The default remote to push to can be set with the following command, it will likely already be set to <code>origin</code> so this would not change anything.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--local</span> remote.pushDefault origin</span></code></pre></div>
<p>This adds the following to your <code>.git/config</code> if it wasn’t already there.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote]</span></span>
<span id="cb4-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushDefault</span> = origin</span></code></pre></div>
</section>
</section>
<section id="adding-remotes" class="level2">
<h2 class="anchored" data-anchor-id="adding-remotes">Adding Remotes</h2>
<p>It is straight forward to add a remote with <code>git remote add &lt;shortcut&gt; &lt;URL&gt;</code> where the URL is either the <code>https</code> or the <code>git</code> URL.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote add forgejo forgejo@forgejo.hopto.org:nshephard/mvdate.git</span></code></pre></div>
<p>This adds details to your <code>.git/config</code> so that it has the following</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin"</span>]</span>
<span id="cb6-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span> = git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb6-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/heads/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:refs/remotes/origin/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/merge-requests/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/head:refs/pullreqs/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forgejo"</span>]</span>
<span id="cb6-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span> = ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb6-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/heads/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:refs/remotes/forgejo/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote]</span></span>
<span id="cb6-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushDefault</span> = origin</span>
<span id="cb6-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>]</span>
<span id="cb6-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> = origin</span>
<span id="cb6-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/main</span></code></pre></div>
<p>Two remotes are defined, <code>origin</code> and <code>forgejo</code>, the default to push to is set to <code>origin</code> and the <code>main</code> branch is setup to track the remote <code>origin</code>.</p>
<section id="pushing-to-specific-remote" class="level3">
<h3 class="anchored" data-anchor-id="pushing-to-specific-remote">Pushing to specific remote</h3>
<p>With two remotes setup you can choose, at the branch level, where to push your changes by specifying the remote you wish to use. If you wanted to push a newly created branch, <code>change-just-for-forgejo</code>, to the newly added <code>forgejo</code> remote you would configure it with.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> change-just-for-forgejo</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--allow-empty</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test push just to forgejo"</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set-upstream</span> forgejo change-just-for-forgejo</span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Enumerating</span> objects: 2, done.</span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Counting</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2/2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> done.</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Writing</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2/2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 376 bytes <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">376.00</span> KiB/s, done.</span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Total</span> 2 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> reused 0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> pack-reused 0</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> Create a new pull request for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'change-just-for-forgejo'</span>:</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>https://forgejo.hopto.org/nshephard/mvdate/compare/main...change-just-for-forgejo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> . Processing 1 references</span>
<span id="cb7-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> Processed 1 references in total</span>
<span id="cb7-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> ssh://forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   [new branch]      change-just-for-forgejo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> change-just-for-forgejo</span>
<span id="cb7-17"></span>
<span id="cb7-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'change-just-for-forgejo'</span> set up to track <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'forgejo/change-just-for-forgejo'</span>.</span></code></pre></div>
<p>Git reports that the local <code>change-just-for-forgejo</code> has been setup to track <code>forgejo/change-just-for-forgejo</code> and the following entry has been added to <code>.git/config</code></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"change-just-for-forgejo"</span>]</span>
<span id="cb8-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forgejo"</span></span>
<span id="cb8-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/change-just-for-forgejo</span></code></pre></div>
</section>
<section id="a-note-on-ssh-ports" class="level3">
<h3 class="anchored" data-anchor-id="a-note-on-ssh-ports">A Note on SSH Ports</h3>
<p>If a remote is using a non-standard port for SSH connections (i.e.&nbsp;anything other than <code>22</code>) then you have to use a different format for specifying the remote URL. Instead of <code>forgejo@forgejo.hopto.org:nshephard/mvdate.git</code> you must explicitly state the protocol (<code>ssh://</code>) and include the port so that it reads <code>ssh://forgejo@forgejo.hopto.org:1234</code> and so to add it you would be added with the following</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote add forgejo ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb9-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>I use a non-standard port and so use that convention for the remainder of this article. If you do not use a non-standard port you can either change the port (<code>1234</code>) to the default (<code>22</code>) or use the conventional syntax for referring to the remote.</p>
</section>
</section>
<section id="mirroring-remotes" class="level2">
<h2 class="anchored" data-anchor-id="mirroring-remotes">Mirroring Remotes</h2>
<p>The really neat thing is that it is possible to have a local repository track multiple remotes, which means when you push your changes it will go to both. You could configure an alias to push to both of the remotes we currently have defined, but there is an excellent post on <a href="https://stackoverflow.com/a/14290145/1444043" target="_blank">StackOverflow</a> that shows how to do this with Git itself because each remote can have multiple <code>pushurls</code>.</p>
<p>As we have added a second remote to our configuration our <code>.git/config</code> for <a href="https://gitlab.com/nsshephard/mvdate" target="_blank">mvdate</a> our configuration currently looks like this.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin"</span>]</span>
<span id="cb10-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span> = git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb10-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/heads/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:refs/remotes/origin/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb10-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/merge-requests/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/head:refs/pullreqs/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb10-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forgejo"</span>]</span>
<span id="cb10-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span> = ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb10-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/heads/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:refs/remotes/forgejo/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb10-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote]</span></span>
<span id="cb10-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushDefault</span> = origin</span>
<span id="cb10-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>]</span>
<span id="cb10-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> = origin</span>
<span id="cb10-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/main</span>
<span id="cb10-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"change-just-for-forgejo"</span>]</span>
<span id="cb10-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> = forgejo</span>
<span id="cb10-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/change-just-for-forgejo</span></code></pre></div>
<p>As above, there are two remotes are defined, <code>origin</code> and <code>forgejo</code>, the default to push to is set to <code>origin</code> and the <code>main</code> branch is setup to track <code>origin</code> whilst the <code>change-just-for-forgejo</code> branch is setup to track <code>forgejo</code>.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb11-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb11-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>How do we get the <code>origin</code> remote setup and configured to push to both gitlab and forgejo? This can be done using the <code>set-url --add --push</code> options to <code>git remote</code>, below we add <code>forgejo</code> as a push target to <code>origin</code>.</p>
<p><strong>NB</strong> Note I use a non-standard SSH port in the following, see above note.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote set-url <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--add</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--push</span> origin ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb12-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>But this has removed the original <code>push</code> target under <code>origin</code> which pointed to <code>gitlab</code> so we need to add that back in.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote set-url <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--add</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--push</span> origin git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb13-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">forgejo</span> ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb13-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb13-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb13-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>We now have two <code>push</code> targets on <code>origin</code>, one pointing to <code>gitlab.com</code> (using the default port <code>22</code>) and one pointing to <code>forgejo.hopto.org</code> (on port <code>1234</code>) and as the default target is <code>origin</code> when we <code>git push</code> it will send the changes to both. We still have the <code>forgejo</code> remote defined and it only tracks the <code>forgejo</code> URL.</p>
<p>We can test this with an empty commit on a new branch, <code>test-both</code>, which we first create.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> test-both</span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--allow-empty</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Testing pushing to GitLab and Forgejo"</span></span>
<span id="cb14-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[test-both</span> c07caf6] Testing pushing to GitLab and Forgejo</span>
<span id="cb14-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git push</span>
<span id="cb14-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Enumerating</span> objects: 1, done.</span>
<span id="cb14-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Counting</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1/1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> done.</span>
<span id="cb14-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Writing</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1/1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 210 bytes <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">210.00</span> KiB/s, done.</span>
<span id="cb14-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Total</span> 1 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> reused 0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> pack-reused 0</span>
<span id="cb14-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb14-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> Create a new pull request for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test-both'</span>:</span>
<span id="cb14-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>https://forgejo.hopto.org/nshephard/mvdate/compare/main...test-both<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb14-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb14-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> . Processing 1 references</span>
<span id="cb14-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> Processed 1 references in total</span>
<span id="cb14-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> ssh://forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb14-16"></span>
<span id="cb14-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   [new branch]      test-both <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> test-both</span>
<span id="cb14-18"></span>
<span id="cb14-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test-both'</span> set up to track <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'origin/test-both'</span>.</span>
<span id="cb14-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Enumerating</span> objects: 26, done.</span>
<span id="cb14-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Counting</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">26/26</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> done.</span>
<span id="cb14-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Writing</span> objects: 100% <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">26/26</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 16.75 KiB <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">8.37</span> MiB/s, done.</span>
<span id="cb14-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Total</span> 26 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> reused 0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">delta</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> pack-reused 0</span>
<span id="cb14-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb14-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span> To create a merge request for test-both, visit:</span>
<span id="cb14-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>https://gitlab.com/nshephard/mvdate/-/merge_requests/new<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span>merge_request%5Bsource_branch%5D=test-both<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb14-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote:</span></span>
<span id="cb14-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> gitlab.com:nshephard/mvdate.git</span>
<span id="cb14-29"></span>
<span id="cb14-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   [new branch]      test-both <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> test-both</span>
<span id="cb14-31"></span>
<span id="cb14-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test-both'</span> set up to track <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'origin/test-both'</span>.</span></code></pre></div>
<p>The output above shows that the branch <code>test-both</code> was pushed to both the URLs we have configured as push targets to <code>origin</code> and if you visit the repositories you will find the branches now exist there.</p>
</section>
<section id="deleting-remotes" class="level2">
<h2 class="anchored" data-anchor-id="deleting-remotes">Deleting Remotes</h2>
<p>In my use case I simply want to push both remotes so that they mirror each other so I can delete the <code>forgejo</code> remote. This will leave the push URL for that remote under the configuration for <code>origin</code> and allows us to set any branch to use the <code>origin</code> as a the remote and any changes will be pushed to both.</p>
<p>There may be instances where you want to leave the additional remote in place if you wanted to push some changes just to that remote so its not essential that you remove it, but if you want to you can delete reference to a remote from your local configuration.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote remove forgejo</span>
<span id="cb15-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb15-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb15-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb15-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">origin</span>  git@gitlab.com:nshephard/mvdate.git <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Because the <code>change-just-for-forgejo</code> was setup to track the <code>forejo</code> remote we would need to change that target, we can do so with the following</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git switch change-just-for-forgejo</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❱</span> git branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set-upstream-to</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>origin/change-just-for-forgejo change-just-for-forgejo</span></code></pre></div>
<p>This changes the remote target for the branches definition and our configuration now looks like the following.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin"</span>]</span>
<span id="cb17-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span> = git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb17-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/heads/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:refs/remotes/origin/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb17-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fetch</span> = +refs/merge-requests/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/head:refs/pullreqs/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb17-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushurl</span> = ssh://forgejo@forgejo.hopto.org:1234/nshephard/mvdate.git</span>
<span id="cb17-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushurl</span> = git@gitlab.com:nshephard/mvdate.git</span>
<span id="cb17-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[remote]</span></span>
<span id="cb17-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pushDefault</span> = origin</span>
<span id="cb17-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>]</span>
<span id="cb17-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> = origin</span>
<span id="cb17-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/main</span>
<span id="cb17-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[branch</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"change-just-for-forgejo"</span>]</span>
<span id="cb17-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">remote</span> = origin</span>
<span id="cb17-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">merge</span> = refs/heads/change-just-for-forgejo</span></code></pre></div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Having a local repository push to two remotes is a simple way of a mirroring. Whether you have a use case for it depends on what you are doing. I could easily imagine this could get very complicated if changes were pushed by others to each remote, but I wouldn’t be surprised if Git is regularly used in this way by others.</p>
<p>Of course if you want to push a branch that you wish to keep private to one remote only then you would have to be very careful in how you use this setup. The original StackOverflow solution inspired that this post suggests creating an independent remote (e.g.&nbsp;<code>all</code>) so that you can push changes to <code>origin</code> or the second remote (in this example <code>forgejo</code>) and use <code>all</code> only when you wish to push changes to both.</p>
<p>Its been good for me to return to a topic I’ve delved into in the past, this second time round I feel I’ve got a slightly better grasp of what I’m doing and have a neater solution to achieve what is required.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes" target="_blank">Git - Working with Remotes</a></li>
<li><a href="https://git-scm.com/docs/git-remote" target="_blank">Git - git-remote Documentation</a></li>
<li><a href="https://stackoverflow.com/questions/14290113/git-pushing-code-to-two-remotes" target="_blank">github - Git - Pushing code to two remotes - Stack Overflow</a></li>
</ul>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2024,
  author = {Shephard, Neil},
  title = {Git {Remotes} {Revisited}},
  date = {2024-02-17},
  url = {https://blog.nshephard.dev/posts/git-remotes-revisited/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2024" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2024. <span>“Git Remotes Revisited.”</span> February 17,
2024. <a href="https://blog.nshephard.dev/posts/git-remotes-revisited/">https://blog.nshephard.dev/posts/git-remotes-revisited/</a>.
</div></div></section></div> ]]></description>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <guid>https://blog.nshephard.dev/posts/git-remotes-revisited/</guid>
  <pubDate>Sat, 17 Feb 2024 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/53494024371_1eecc0b722_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Git Remotes</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/git-remotes/</link>
  <description><![CDATA[ 





<p><a href="https://git.scm" target="_blank">Git</a> and various forges such as <a href="https://github.com" target="_blank">GitHub</a> <a href="https://gitlab.com" target="_blank">GitLab</a> are useful collaborative tools for version controlling, sharing and working collaboratively. Normally a repository resides on your local computer and it tracks a remote (often referred to as <code>origin</code>)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://live.staticflickr.com/65535/49833632231_bd701b7621_k.jpg" class="img-fluid figure-img"></p>
<figcaption><a href="https://flickr.com/photos/slackline/49833632231/" target="_blank">Looking up by me</a></figcaption>
</figure>
</div>
<section id="gitconfig" class="level2">
<h2 class="anchored" data-anchor-id="gitconfig"><code>.git/config</code></h2>
<p>When you initialise or clone a repository a hidden directory <code>.git</code> is created. Within this resides the configuration file for the repository <code>.git/config</code> that defines how Git is to behave when performing actions on the repository.</p>
<section id="core" class="level3">
<h3 class="anchored" data-anchor-id="core"><code>core</code></h3>
</section>
<section id="remote" class="level3">
<h3 class="anchored" data-anchor-id="remote"><code>remote</code></h3>
<p>The <code>remote</code> field defines the location of the repository to which code is synced via pushing and pulling. Typically and by default this is called the <code>origin</code> and you have a section that defines the <code>url</code> and the <code>fetch</code> for this remote.</p>
<p>The <code>url</code> field can take two forms, either one based on <code>https</code> in which case the prefix of the value will be <code>https://github.com/</code> or one based on <code>ssh</code> in which case the prefix will be <code>git@github.com:</code>. What follows is then the user account or organisation (e.g.&nbsp;<code>ns-rse</code> for my personal repositories) followed by <code>/&lt;repo-name&gt;</code> (e.g.&nbsp;for this repository that is <code>ns-rse.github.io</code>).</p>
<p>The <code>fetch</code> field is what in Git parlance is called a <a href="https://git-scm.com/book/it/v2/Git-Internals-The-Refspec" target="_blank">Refspec</a> (Reference Specification). This takes the form <code>&lt;src&gt;:&lt;dst&gt;</code> and is a method of mapping references on the remote side (<code>&lt;src&gt;</code>) to those locally (<code>&lt;dst&gt;</code>) and it is this that maps the local branches (<code>refs/heads/*</code>) to their counterparts on the remote (<code>refs/remotes/origin/*</code>). If there is a <code>+</code> prefix it tells git to up-date the reference even if there is no <a href="https://www.git-basics.com/docs/git-merge/fast-forward" target="_blank">fast-forward</a>.</p>
<pre class="config"><code>[remote "origin"]
    url = git@github.com:ns-rse/ns-rse.github.io
    fetch = +refs/heads/*:refs/remotes/origin/*</code></pre>
</section>
<section id="branch" class="level3">
<h3 class="anchored" data-anchor-id="branch"><code>branch</code></h3>
<p>What follows is then a series of entries for <code>branch</code> which defines further how each local <code>branch</code> maps to a <code>remote</code> and where it should <code>merge</code> to. Each branch has a name define in the section header and within two parameters are set the <code>remote</code> which by default points to the <code>origin</code> (defined in the above <code>remote</code>) section and a <code>merge</code> field which defines the local reference to the branch under <code>refs/head/&lt;branch-name&gt;</code>.</p>
</section>
</section>
<section id="having-a-private-branch" class="level2">
<h2 class="anchored" data-anchor-id="having-a-private-branch">Having a Private branch</h2>
<p>Sometimes the need might arise to develop a feature in private. This is fine if you have no intention of sharing the work with others, you create a branch on your local computer and never push it to a forge. However, there will arise times where you do want to share you work with others whilst keeping things private. This too is possible and can be achieved by creating a private repository on your own account rather than using the original and configuring a branch to track that instead.</p>
<section id="creating-a-second-remote" class="level3">
<h3 class="anchored" data-anchor-id="creating-a-second-remote">Creating a second <code>remote</code></h3>
<p>Start by creating a new repository on GitHub/GitLab and making it private from the outset. Do <em>not</em> include any additional information such as <code>.gitignore</code>, <code>README.md</code> or <code>LICENSE.md</code> it should be completely empty.</p>
<p>You can then add it as a new <code>remote</code> to your existing repository in one of two ways.</p>
<section id="git-at-the-command-line" class="level4">
<h4 class="anchored" data-anchor-id="git-at-the-command-line">Git at the Command Line</h4>
<p>You should have some instructions shown on GitHub one of which is <strong>…or push an existing repository from the command line</strong>. The first line of this is telling you how to add a new remote to the repository. called <code>origin</code> and to point towards the repository you have just created. You will likely already have an <code>origin</code> remote defined so you need to choose a different name and point it to the correct location.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add private-work git@github.com:ns-rse/private-work</span></code></pre></div>
</section>
<section id="check-your-.gitconfig" class="level4">
<h4 class="anchored" data-anchor-id="check-your-.gitconfig">Check your <code>.git/config</code></h4>
<p>If you now look at your <code>.git/config</code> file there should be two entries for <code>[remote ""]</code> one for origin (i.e.&nbsp;<code>[remote "origin"]</code>) and one for the new remote that has just been added <code>[remote "private-work"]</code>. Of course, because <code>.git/config</code> is just a text configuration file you can edit it and enter these values manually yourself if you want to.</p>
<p><strong>NB</strong> Either of the above methods will append these options to the bottom of the file so if you can’t see it immediately scroll down.</p>
</section>
</section>
<section id="track-your-new-remote" class="level3">
<h3 class="anchored" data-anchor-id="track-your-new-remote">Track your new remote</h3>
<p>Now that you have a secondary <code>remote</code> defined you can create a branch and set it to track the private remote you have created and configured. Create a new branch by using <code>git checkout -b</code></p>
<section id="command-line" class="level4">
<h4 class="anchored" data-anchor-id="command-line">Command Line</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> private-feature</span></code></pre></div>
<p>You then set the upstream using <code>--set-upstream-to</code> or its shorthand <code>-u</code>, at this stage you don’t have anything to include so make an empty commit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set-upstream-to</span> private-work private-work</span></code></pre></div>
</section>
<section id="magit" class="level4">
<h4 class="anchored" data-anchor-id="magit">Magit</h4>
</section>
<section id="check-.gitconfig" class="level4">
<h4 class="anchored" data-anchor-id="check-.gitconfig">Check <code>.git/config</code></h4>
<p>Returning to your <code>.git/config</code> file you should now have an additional entry for a <code>branch</code> underneath the new entry for the <code>remote</code> and the value for <code>remote</code> under <code>branch</code> is the name of the <code>remote</code>.</p>
<pre class="config"><code>[remote "private-work"]
 url = git@github.com:ns-rse/private-work.git
 fetch = +refs/heads/*:refs/remotes/private-work/*
[branch "private-feature"]
 remote = private-work
 merge = refs/heads/private-feature</code></pre>
</section>
</section>
</section>
<section id="keeping-up-to-date" class="level2">
<h2 class="anchored" data-anchor-id="keeping-up-to-date">Keeping up to Date</h2>
<p>The private repository you setup on GitHub/GitLab should now have a copy of the <code>private-work</code> branch you created locally.</p>
<p>If you are collaborating with others the <code>main</code>/<code>master</code> branch may move ahead of yours as others work is merged in. You therefore need to regularly update your private branch by merging or rebasing from the <code>origin</code> rather than the <code>private-work</code> remote your branch is configured to track. The difference between merging and rebasing is beyond the scope of this article, there are pros and cons to each</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout main</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> pull</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout private-work</span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge main</span></code></pre></div>
<p>Or you can merge directly from origin with</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout private-feature</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge origin/main</span></code></pre></div>
</section>
<section id="checkout-someone-elses-private-branch" class="level2">
<h2 class="anchored" data-anchor-id="checkout-someone-elses-private-branch">Checkout someone else’s private branch</h2>
<p>Inevitably the need might arise for a collaborator to test your private branch. In which case they need to be granted permission to the private repository by the developer who created it. This is done via <em>Settings &gt; Collaborators</em> and inviting them to work on your repository.</p>
<p>Once they have accepted the invitation they will also have to add a secondary <code>remote</code> and the <code>branch</code> they are working on. They can follow the instructions above to set up a remote, however they should <em>not</em> follow the instructions to <code>branch</code> because that branch already exists on your private repository.</p>
<p>but because <code>.git/config</code> is just a text file you can copy the lines from your configuration and share it with your collaborator and they can add them to their <code>.git/config</code> file. Once these options have been added they</p>
</section>
<section id="bonus---using-magit" class="level2">
<h2 class="anchored" data-anchor-id="bonus---using-magit">Bonus - Using Magit</h2>
<p>If you use <a href="https://www.gnu.org/software/emacs/" target="_blank">Emacs</a> and the amazing <a href="https://magit.vc" target="_blank">Magit</a> you can of course do this via the Magit interface. In the Magit buffer for the repository (e.g.&nbsp;<code>magit: ns-rse.github.io</code>) press <code>M</code> to bring up the <code>Remote</code> transient buffer. You then press <code>a</code> to add a remote and are prompted for a name for the remote (in this example we use the same as above <code>private-work</code>), this can be anything you want other than <code>origin</code> which is already defined, and then the URL this will be <code>git@github.com:&lt;account-name&gt;/&lt;private-repo-name&gt;.git</code>.</p>
<p>To create a branch in Magit press <code>b</code> then <code>l</code> to select a local branch and enter <code>main</code> (or <code>master</code>), then make sure its upto date with the <code>origin</code> by Pulling with <code>P</code> then <code>u</code>. Now create a new branch by pressing <code>b</code> and since it will be a new press <code>c</code> to create it. You will be prompted for the name of a branch from which to branch from and then for the name of your branch.</p>
<p>In the Magit buffer for the repository you are working on pushes are made with <code>P</code>. The Transient buffer then offers you a choice of places to push to, one of which is <code>elsewhere</code> which is accessed by the <code>e</code> key. You can then type in the name of the remote tracking branch as defined under the <code>remote</code> entry you configured above which in this case is <code>private-work</code>.</p>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2023,
  author = {Shephard, Neil},
  title = {Git {Remotes}},
  date = {2023-10-06},
  url = {https://blog.nshephard.dev/posts/git-remotes/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2023" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2023. <span>“Git Remotes.”</span> October 6, 2023. <a href="https://blog.nshephard.dev/posts/git-remotes/">https://blog.nshephard.dev/posts/git-remotes/</a>.
</div></div></section></div> ]]></description>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <guid>https://blog.nshephard.dev/posts/git-remotes/</guid>
  <pubDate>Fri, 06 Oct 2023 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/49833632231_bd701b7621_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pre-Commit : Useful Hooks</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/pre-commit-hooks/</link>
  <description><![CDATA[ 





<p>I’m a big fan of <a href="https://pre-commit.com" target="_blank">pre-commit</a> and have written about it before (see posts on <a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">pre-commit</a>, <a href="https://ns-rse.github.io/posts/pre-commit-ci/" target="_blank">pre-commit CI</a> and <a href="https://ns-rse.github.io/posts/pre-commit-updating/" target="_blank">pre-commit updating</a>). This post discusses some of the <a href="https://pre-commit.com/hooks" target="_blank">hooks</a> that I use and how to configure them.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://live.staticflickr.com/65535/52842122133_2b441c61ad_k.jpg" class="img-fluid figure-img"></p>
<figcaption><a href="https://www.flickr.com/photos/slackline/52842122133/in/datetaken/" target="_blank"><em>Irridescent</em> Picture by me</a></figcaption>
</figure>
</div>
<section id="python-linting" class="level2">
<h2 class="anchored" data-anchor-id="python-linting">Python Linting</h2>
<section id="ruff" class="level3">
<h3 class="anchored" data-anchor-id="ruff">Ruff</h3>
<p><a href="https://github.com/charliermarsh/ruff" target="_blank">ruff</a> is a Python linter written in Rust which means its considerably faster than many native linters. It aims for parity with Flake8 and covers a lot of the linting that PyLint undertakes too. Its configured via <code>pyproject.toml</code> which makes incorporating it into your Python Package simple.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/charliermarsh/ruff-pre-commit</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v0.0.191</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ruff</span></span></code></pre></div>
<p>Configuration is, as noted, via <code>pyproject.toml</code> and you may find the post on <a href="https://ns-rse.github.io/posts/python-packaging/" target="_blank">Python Packaging</a> worth reading to understand more on this.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[tool.ruff]</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">exclude</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># per-file-ignores = []</span></span>
<span id="cb2-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">line-length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb2-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">target-version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py310"</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Allow autofix for all enabled rules (when `--fix`) is provided.</span></span>
<span id="cb2-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fixable</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unfixable</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span></code></pre></div>
</section>
<section id="black" class="level3">
<h3 class="anchored" data-anchor-id="black">Black</h3>
<p><a href="https://black.readthedocs.io/en/stable/index.html" target="_blank">Black</a> is an opinionated formatter for Python that is <a href="https://pep8.org/" target="_blank">PEP8</a> compliant. By using <code>black</code> to format your code you end up with a consistent style across the code base and commit changes end up being minimal. This helps speed up code-review of pull-requests.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/psf/black</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.10.0</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> black</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>Configuration is, as noted, via <code>pyproject.toml</code> and you may find the post on <a href="https://ns-rse.github.io/posts/pre-commit-updating/" target="_blank">Python Packaging</a> worth reading to understand more on this.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[tool.black]</span></span>
<span id="cb4-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">line-length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb4-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">target-version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py38"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py39"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py310"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb4-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">include</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.pyi?$"</span></span></code></pre></div>
</section>
<section id="pydocstyle" class="level3">
<h3 class="anchored" data-anchor-id="pydocstyle">pydocstyle</h3>
<p>You can check your docstrings are correctly written using the <a href="https://www.pydocstyle.org/en/stable/usage.html#usage-with-the-pre-commit-git-hooks-framework" target="_blank">pydocstyle</a> hook.</p>
<p>Its pretty straight-forward to use and accepts arguments so you can pass all the command line options you might want to use into the hook when it runs. It supports three different doc string styles, <code>pep257</code>, <code>numpy</code> and <code>google</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> repo  https://github.com/pycqa/pydocstyle</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.3.0</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # pick a git hash / tag to point to</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pydocstyle</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> --convention=numpy</span></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Optionally ignore rules</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> --ignore=D101,D2</span></span></code></pre></div>
<p>Alternatively you can add configuration options to your projects <code>pyproject.toml</code> under a <code>[tool.pydocstyle]</code> section.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[tool.pydocstyle]</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">convention</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numpy"</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ignore</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb6-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D101"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D2"</span></span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</section>
</section>
<section id="markdown-linting" class="level2">
<h2 class="anchored" data-anchor-id="markdown-linting">Markdown Linting</h2>
<p><a href="https://github.com/DavidAnson/markdownlint-cli2" target="_blank">markdownlint-cli2</a> is a useful and highly configurable hook for linting <a href="https://www.markdownguide.org" target="_blank">Markdown</a> and <a href="https://commonmark.org/" target="_blank">CommonMark</a>. I wanted to use it on this blog though which is written using <a href="https://quarto.org/docs/authoring/markdown-basics.html" target="_blank">Quarto</a> and therefore uses <a href="https://pandoc.org/MANUAL.html#pandocs-markdown" target="_blank">PandocMarkdown</a> with files that have extension <code>.qmd</code>. I therefore enable the hook in <code>.pre-commit-config.yaml</code> with a configuration file specified</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/DavidAnson/markdownlint-cli2</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v0.6.0</span></span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> markdownlint-cli2</span></span>
<span id="cb7-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.markdownlin-cli2.yaml</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>..and add a sample configuration file (e.g.&nbsp;<code>.mardownlint-cli2.yaml</code> although other formats such as JSON can be used) is shown below and <code>markdownlint-cli2</code> picks this up automatically.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configuration</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # MD013 - line-length</span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">line_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">line_length</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code_blocks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb8-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb8-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">allowed_elements</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> div</span></span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Globs</span></span>
<span id="cb8-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">globs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"**/*.qmd"</span></span>
<span id="cb8-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.qmd"</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix any fixable errors</span></span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
</section>
<section id="emacs-lisp" class="level2">
<h2 class="anchored" data-anchor-id="emacs-lisp">Emacs Lisp</h2>
<p>As I use <a href="https://www.gnu.org/software/emacs/" target="_blank">Emacs</a> I have recourse to write some <a href="https://www.gnu.org/software/emacs/manual/html_node/eintr/" target="_blank">Emacs Lisp</a> and so its useful to applying formatting to my <code>.el</code> files before committing them. <a href="https://github.com/eschulte/lisp-format" target="_blank">lisp-format</a> does the job nicely.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/eschulte/lisp-format</span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 088c8f78ca41204b44f2636275517ac09a2de6a9</span></span>
<span id="cb9-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lisp-format</span></span>
<span id="cb9-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> formatter of lisp code</span></span>
<span id="cb9-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Run lisp-format against lisp files</span></span>
<span id="cb9-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">language</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> script</span></span>
<span id="cb9-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">files</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> \.(lisp|cl|asd|scm|el)$</span></span>
<span id="cb9-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">entry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lisp-format -i</span></span></code></pre></div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>There are a <em>lot</em> of hooks out there to be used with <a href="https://pre-commit.com" target="_blank">pre-commit</a> and incorporated into your Continuous Integration pipeline with <a href="https://pre-commit.ci" target="_blank">pre-commit.ci</a>. Which you find useful will depend to a large extent on the languages that you are using for any given project. Here I’ve focused mainly on common tools for Python Packages, Markdown and Lisp but you can find hooks for Docker, Ansible, Rust, Go, JavaScript, C++ and many more, there is even <a href="https://github.com/jorisroovers/gitlint" target="_blank">gitlint</a> which lints your commit messages! Checkout the long list of available <a href="https://pre-commit.com/hooks" target="_blank">hooks</a> and try some out.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<section id="related-pre-commit-posts" class="level3">
<h3 class="anchored" data-anchor-id="related-pre-commit-posts">Related pre-commit posts</h3>
<ul>
<li><a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">pre-commit</a></li>
<li><a href="https://ns-rse.github.io/posts/pre-commit-ci/" target="_blank">pre-commit CI</a></li>
<li><a href="https://ns-rse.github.io/posts/pre-commit-updating/" target="_blank">pre-commit updating</a></li>
</ul>
</section>
<section id="pre-commit-hooks" class="level3">
<h3 class="anchored" data-anchor-id="pre-commit-hooks">Pre-commit hooks</h3>
<ul>
<li><a href="https://pre-commit.com" target="_blank">pre-commit</a> (<a href="https://pre-commit.com/hooks" target="_blank">pre-commit hooks</a>)</li>
<li><a href="https://pre-commit.ci" target="_blank">pre-commit.ci</a></li>
<li><a href="https://github.com/charliermarsh/ruff" target="_blank">ruff</a></li>
<li><a href="https://github.com/DavidAnson/markdownlint-cli2" target="_blank">markdownlint-cli2</a></li>
<li><a href="https://black.readthedocs.io/en/stable/index.html" target="_blank">Black</a></li>
<li><a href="https://github.com/eschulte/lisp-format" target="_blank">lisp-format</a></li>
<li><a href="https://github.com/jorisroovers/gitlint" target="_blank">gitlint</a></li>
</ul>



</section>
</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2023,
  author = {Shephard, Neil},
  title = {Pre-Commit : {Useful} {Hooks}},
  date = {2023-05-07},
  url = {https://blog.nshephard.dev/posts/pre-commit-hooks/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2023" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2023. <span>“Pre-Commit : Useful Hooks.”</span> May 7,
2023. <a href="https://blog.nshephard.dev/posts/pre-commit-hooks/">https://blog.nshephard.dev/posts/pre-commit-hooks/</a>.
</div></div></section></div> ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>linting</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>pre-commit</category>
  <guid>https://blog.nshephard.dev/posts/pre-commit-hooks/</guid>
  <pubDate>Sun, 07 May 2023 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/52842122133_2b441c61ad_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pre-Commit.ci : Integrating Pre-Commit into CI/CD</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/pre-commit-ci/</link>
  <description><![CDATA[ 





<p><strong>NB</strong> If you’ve not read it already I would recommend reading my previous post on using <a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">pre-commit</a> as the contents described herein assume that you are already using <a href="https://pre-commit.com" target="_blank">pre-commit</a> in your development.</p>
<p>Having <a href="https://pre-commit.com" target="_blank">pre-commit</a> setup locally to run before making commits is great. Typically code lives in a “forge” such as <a href="https://github.com" target="_blank">GitHub</a> or <a href="https://gitlab.com" target="_blank">GitLab</a> and as <code>pre-commit</code> is run on each commit you shouldn’t have any problems when you come to <code>git push</code> your code to the remote <code>origin</code> repository (i.e.&nbsp;the repository hosted on GitHub/GitLab) as all <code>pre-commit</code> checks will have to have passed before this will take place.</p>
<p>But what if for some reason you disabled <code>pre-commit</code> just to make some changes rather than addressing the failed linting or test? Or if you work on an open-source project and someone else contributes how can you ensure that their contributed code meets the code-style chosen by the project and that all tests pass in light of the changes that are being introduced?</p>
<section id="continuous-integration-continuous-delivery-cicd" class="level2">
<h2 class="anchored" data-anchor-id="continuous-integration-continuous-delivery-cicd">Continuous Integration / Continuous Delivery (CI/CD)</h2>
<p>The solution to this is Continuous Integration/Continuous Delivery (CI/CD) which runs various hooks on GitHub/GitLab etc. in response to specific tasks/actions that occur on the repository. The exact name or system used depends on the forge, on GitHub these are <a href="https://docs.github.com/en/actions" target="_blank">GitHub Actions</a> (see also <a href="https://github.com/marketplace?type=actions" target="_blank">Actions Marketplace</a>) whilst on GitLab uses <a href="https://docs.gitlab.com/ee/ci/pipelines/" target="_blank">Pipelines</a>. There are even standalone systems which integrate with both such as the popular <a href="https://www.jenkins.io" target="_blank">Jenkins</a>.</p>
<p><strong>By employing <code>pre-commit</code> as part of your CI/CD pipeline you ensure code meets the standards (linting, tests etc.) you wish contributions to meet before it is merged into your <code>main</code>/<code>master</code> branch`</strong></p>
<p>These work by running processes under certain conditions, for example on a <code>push</code> to the <code>main</code> branch or a <code>tag</code> that begins with <code>v</code>, and they might run processes such as running the test suite for your project to ensure all tests pass, build web-pages or build the package for deployment to a repository (e.g.&nbsp;<a href="https://pypi.org" target="_blank">PyPI</a>). They are really useful and flexible systems and can be leveraged to run <code>pre-commit</code> on your code when Pull Requests (PR) are made to ensure the PR passes the various hooks. Ultimately a PR results in a <code>commit</code> to <code>master</code>/<code>main</code> and so its logically consistent that Pull Requests should pass <code>pre-commit</code> prior to being merged.</p>
<p>Under any system you could write your own hook to run <code>pre-commit</code> but there is an even easier and more efficient solution if you use GitHub in the form of <a href="https://pre-commit.ci" target="_blank">pre-commit.ci</a>.</p>
</section>
<section id="github-and-pre-commit.ci" class="level2">
<h2 class="anchored" data-anchor-id="github-and-pre-commit.ci">GitHub and pre-commit.ci</h2>
<p>Currently <a href="https://pre-commit.ci" target="_blank">pre-commit.ci</a> only supports GitHub although support of other systems is in the pipeline. <code>pre-commit.ci</code> doesn’t need any configuration beyond your already existing <code>.pre-commit-config.yaml</code> (see <a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">Pre-commit : Protecting Your Future Self</a>). Where a <code>pre-commit</code> hook corrects formatting issues as is the case with some of the defaults such as <code>trailing-whitespace</code> or <code>check-yaml</code>, or if you are using Python linters such as <a href="https://black.readthedocs.io/en/stable/" target="_blank"><code>black</code></a> or <a href="https://github.com/charliermarsh/ruff" target="_blank"><code>ruff</code></a> which fix errors, <code>pre-commit.ci</code> can commit these changes and push them back to the Pull Request automatically. In a similar vein it will also routinely update the <code>rev</code> used in your <code>.pre-commit-config.yaml</code>, commit the change and push it back to your repository.</p>
<p>It is also really fast because <code>pre-commit.ci</code> keeps the virtual environments that are used in tests cached whereas if you wrote your own action to run this the GitHub runner that is spun up to run GitHub Actions would have to download all of these each time the action is run is they are not persistent.</p>
<p>Use of <code>pre-commit.ci</code> is free for open-source repositories and there are paid options for private or organisation repositories.</p>
<blockquote class="blockquote">
<p><strong>Benefits of pre-commit.ci</strong></p>
<ul>
<li>Supports GitHub but more to come in the future.</li>
<li>Zero configuration, just need <code>.pre-commit-config.yaml</code>.</li>
<li>Corrects &amp; commits formatting issues automatically without need for developer to reformat.</li>
<li>Automatically updates <code>.pre-commit-config.yaml</code> for you (e.g.&nbsp;new <code>rev</code>).</li>
<li>Faster than your own GitHub Action.</li>
<li>Free for open source repositories (paid for version for private/organisation repositories).</li>
</ul>
</blockquote>
<section id="configuration-.pre-commit-config.yaml" class="level3">
<h3 class="anchored" data-anchor-id="configuration-.pre-commit-config.yaml">Configuration (<code>.pre-commit-config.yaml</code>)</h3>
<p>Whilst not required it is possible to configure the behaviour of <code>pre-commit.ci</code> by adding a <code>ci:</code> section to your <code>.pre-commit-config.yaml</code>. The fields are fairly self-explanatory as the example below shows. Its possible to toggle whether to <code>autofix_prs</code> and to set the <code>autofix_commit_msg</code>. The <code>autoupdate_schedule</code> can be set to <code>weekly</code>, <code>monthly</code> or <code>quarterly</code> along with a custom <code>autoupdate_commit_msg</code>. Finally you can optionally disable some hooks from being run only in <code>pre-commit.ci</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ci</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autofix_prs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autofix_commit_msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[pre-commit.ci] Fixing issues with pre-commit'</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoupdate_schedule</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> weekly</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoupdate_commit_msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[pre-commit.ci] pre-commit automatically updated revs.'</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">skip</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pylint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # Optionally list ids of hooks to skip on CI</span></span></code></pre></div>
</section>
<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<p>Setup is relatively straight-forward, head to <a href="https://pre-commit.ci" target="_blank">https://pre-commit.ci</a> and sign-in with your GitHub account and grant <code>pre-commit.ci</code> access to your account.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/pre-commit-ci.png" class="img-fluid figure-img"></p>
<figcaption>Pre-commit CI</figcaption>
</figure>
</div>
<p>Once you have granted access you can choose which repositories <code>pre-commit.ci</code> has access to. It is possible to grant access to all repositories but I would recommend doing so on a per-repository basis so you know and are in control of what is happening across your repositories. If you have administration rights to organisation repositories these should be listed in the “<em>Select repositories</em>” pull-down menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/github-pre-commit-access.png" class="img-fluid figure-img"></p>
<figcaption>Granting pre-commit.ci access to GitHub</figcaption>
</figure>
</div>
</section>
<section id="pre-commit.ci-jobs" class="level3">
<h3 class="anchored" data-anchor-id="pre-commit.ci-jobs"><code>pre-commit.ci</code> jobs</h3>
<p>When logged into <code>pre-commit.ci</code> using your GitHub account you are presented with a page similar to the following which lists the accounts and any organisations that you have authorised <code>pre-commit.ci</code> to access.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/account-pre-commit-ci.png" class="img-fluid figure-img"></p>
<figcaption>Pre-commit.ci account access</figcaption>
</figure>
</div>
<p>You can follow the links through to view the history of jobs run by <code>pre-commit.ci</code> and whether they pass or fail. The page shows the current status and provides both Markdown and reStructured Text code for adding badges to your source documents (e.g.&nbsp;the Markdown badge can be added to your repositories top-level <code>README.md</code> and the badge will be displayed on GitHub)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/pre-commit-ci-pass2.png" class="img-fluid figure-img"></p>
<figcaption>Pre-commit.ci jobs pass</figcaption>
</figure>
</div>
<p>You can click through and see the results of a given run and when they <a href="https://results.pre-commit.ci/run/github/168173540/1674062271.Tj4xDOxqRFu3CDIPhXkMJA" target="_blank">pass</a> they look similar to the output you would have seen when making commits locally.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/pre-commit-ci-pass3.png" class="img-fluid figure-img"></p>
<figcaption>Pre-commit.ci jobs pass</figcaption>
</figure>
</div>
<p>But sometimes things will <a href="https://results.pre-commit.ci/run/github/168173540/1674061180.-2Eo_dbfRAGrukip387Nhg" target="_blank">fail</a> as shown below where the <code>trailing-whitespace</code> hook failed and the file was modified. But since <code>pre-commit.ci</code> corrects and pushes such changes automatically you can see at the bottom that these changes were pushed to the Pull Request from which the originated.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/pre-commit-ci-fail.png" class="img-fluid figure-img"></p>
<figcaption>Pre-commit.ci jobs fail</figcaption>
</figure>
</div>
</section>
</section>
<section id="gitlab" class="level2">
<h2 class="anchored" data-anchor-id="gitlab">GitLab</h2>
<p>As <a href="https://pre-commit.ci" target="_blank"><code>pre-commit.ci</code></a> doesn’t (yet) support GitLab integrating <code>pre-commit</code> into your GitLab Pipeline is a little more involved. What follows is based on the excellent post on <a href="https://stackoverflow.com/collectives/articles/71270196/how-to-use-pre-commit-to-automatically-correct-commits-and-merge-requests-with-g" target="_blank">StackOverflow</a> describing how to achieve this integration.</p>
<p>You should already have a valid <code>.pre-commit-config.yaml</code> in place (if not work through <a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">Pre-commit : Protecting your future self (blog-post)</a>). To enable <code>pre-commit</code> on your <a href="https://docs.gitlab.com/ee/ci/pipelines/" target="_blank">GitLab Pipeline</a> you need to to have a pipeline in place. This is a file in the root of your repository called <code>.gitlab-ci.yml</code>. You need to add the following to this file…</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # since we're not using merge request pipelines in this example,</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # we will configure the pre-commit job to run on branch pipelines only.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # If you ARE using merge request pipelines, you can omit this section</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PRE_COMMIT_AUTO_FIX_BRANCH_ONLY</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remote</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://gitlab.com/yesolutions/gitlab-ci-templates/raw/main/templates/pre-commit-autofix.yaml'</span></span></code></pre></div>
<p>This uses the <code>pre-commit-autofix.yaml</code> from <a href="https://gitlab.com/yesolutions/" target="_blank">yesolutions</a> to run <code>pre-commit</code> and as the configuration shows automatically apply fixes <code>pre-commit</code> makes to your code. There are more options available for configuring this pipeline and they are documented <a href="https://gitlab.com/yesolutions/gitlab-ci-templates" target="_blank">here</a>.</p>
<p>Because you are allowing a third-party pipeline to access your repository when pushing the changes <code>pre-commit</code> makes back to your repository for this to work you <em>must</em> create a <a href="https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html" target="_blank">project access token</a>. Under the repositories <em>Settings &gt; Access Tokens</em> you can create a new token with an expiry date. You must then create a CI/CD variable called <code>PRE_COMMIT_ACCESS_TOKEN</code> with this token as a value.</p>
<p>Once you have done this your CI/CD pipeline should show at the very start the <code>.pre</code> stage…</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/gitlab-pre-commit-pipeline.png" class="img-fluid figure-img"></p>
<figcaption>GitLab pre-commit pipeline.</figcaption>
</figure>
</div>
<p>…and you can click through on this to see the details of the pipeline. Note that it takes a while to run as it has to download and initialise all of the environments for each configured hook unlike <a href="https://pre-commit.ci" target="_blank"><code>pre-commit.ci</code></a> (this is akin to writing your own <a href="https://docs.github.com/en/actions" target="_blank">GitHub Action</a> to run <code>pre-commit</code> which would also have to download and initialise the environments).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.nshephard.dev/posts/pre-commit-ci/img/gitlab-pre-commit-pipeline-pass.png" class="img-fluid figure-img"></p>
<figcaption>Success! GitLab pre-commit hooks pass!</figcaption>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This article has covered</p>
<ul>
<li>Why to integrate <a href="https://pre-commit.com" target="_blank"><code>pre-commit</code></a> into your Continuous Integration/Delivery pipeline.</li>
<li>What the <a href="https://pre-commit.ci" target="_blank"><code>pre-commit.ci</code></a> service is and the benefits it provides.</li>
<li>How to integrate <a href="https://pre-commit.ci" target="_blank"><code>pre-commit.ci</code></a> with <a href="https://github.com" target="_blank">GitHub</a> repositories.</li>
<li>How to integrate <a href="https://pre-commit.com" target="_blank"><code>pre-commit</code></a> with <a href="https://gitlab.com" target="_blank">GitLab</a> repositories.</li>
</ul>
<p>By automating linting and testing in this manner you improve and shorten the feedback loop for developers and contributors which frees up more time and focus on the code itself.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">Pre-commit : Protecting your future self (blog-post)</a>- pre-requisite reading if you are not already using <a href="https://pre-commit.com" target="_blank"><code>pre-commit</code></a></li>
<li><a href="https://ns-rse.github.io/pre-commit/" target="_blank">Pre-commit : Protecting your future self (slides)</a> - slides from a talk given at Research Computing at the University of Leeds that extended the above blog post to cover the material in this post (hit <code>s</code> to see the “speaker notes” <span class="emoji" data-emoji="wink">😉</span>).</li>
<li><a href="https://pre-commit.com" target="_blank"><code>pre-commit</code></a></li>
<li><a href="https://pre-commit.ci" target="_blank"><code>pre-commit.ci</code></a></li>
<li><a href="https://stackoverflow.com/collectives/articles/71270196/how-to-use-pre-commit-to-automatically-correct-commits-and-merge-requests-with-g" target="_blank">How to use pre-commit to automatically correct commits and merge requests with GitLab CI - Stack Overflow</a></li>
</ul>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2023,
  author = {Shephard, Neil},
  title = {Pre-Commit.ci : {Integrating} {Pre-Commit} into {CI/CD}},
  date = {2023-02-06},
  url = {https://blog.nshephard.dev/posts/pre-commit-ci/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2023" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2023. <span>“Pre-Commit.ci : Integrating Pre-Commit into
CI/CD.”</span> February 6, 2023. <a href="https://blog.nshephard.dev/posts/pre-commit-ci/">https://blog.nshephard.dev/posts/pre-commit-ci/</a>.
</div></div></section></div> ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>linting</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>pre-commit</category>
  <guid>https://blog.nshephard.dev/posts/pre-commit-ci/</guid>
  <pubDate>Mon, 06 Feb 2023 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/52596382383_eefbf62543_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Who’s to Blame</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/whos_to_blame/</link>
  <description><![CDATA[ 





<p><a href="https://www.git-scm.com/docs/git-blame" target="_blank">Git blame</a> shows who made changes to which line of code for a given point in its history.</p>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>Git blame works on individual files and so requires a filename, there are a host of options, for example <code>-e</code> prints the authors email address <code>-w</code> ignores changes to white space and <code>-L 10,20</code> restricts output to the specified line range. If you want a the blame for a specific revision then you must include the hash.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> blame <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> 10,20 f923la git_blame.org</span></code></pre></div>
</section>
<section id="alias" class="level2">
<h2 class="anchored" data-anchor-id="alias">Alias</h2>
<p>Some people don’t like the pejorative nature of the word <code>blame</code>. That’s ok though, with a tweak to our configuration its possible to use the alias <code>praise</code> or simply <code>who</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># blame alias</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> alias.praise blame</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> praise <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L1,30</span> git_blame.org</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># who alias</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> alias.who blame</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> who <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L1,30</span> git_blame.org</span></code></pre></div>
<p>For more detailed information on the array of options refer to the <a href="https://www.git-scm.com/docs/git-blame" target="_blank">official documentation</a> or see <code>git blame --help</code>.</p>
</section>
<section id="ignoring-blame" class="level2">
<h2 class="anchored" data-anchor-id="ignoring-blame">Ignoring blame</h2>
<p>Sometimes the case arises where you want to ignore blame. Perhaps the most common example is when an existing code base has been <a href="../linting" target="_blank">linted</a> to conform to a particular style guide. Looking at who performed these changes is not informative and masks who made the changes and why. Its possible to ignore specific commits on the command line with <code>--ignore-revs &lt;hash&gt; &lt;file&gt;</code>, but it will quickly become tedious to remember to ignore all blame across multiple commits. Fortunately you can save the commits to ignore to the file <code>.git-blame-ignore-revs</code> (along with comments) so that they are stored. The full commit (40 characters) of hashes should be used.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PEP8 compliance for module X</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">c00177a6121f86c001f338feff3280fd576fdbf3</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PEP8 compliance for module Y</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">db27fa5f18299ca631efc430512a3f358c2b154f</span></span></code></pre></div>
<p>Now that you have the revisions in place to be ignored when reporting blame you can choose not to use it.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> blame <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ignore-revs-file</span> .git-blame-ignore-revs git_blame.org</span></code></pre></div>
<p>…but this is tedious to remember to have to do each time and ideally others on your team should use this file too. You can configure Git to use this file by modifying the local configuration. Make sure to add it to your repository so that others can use it.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config blame.ignoreRevsFile .git-blame-ignore-revs</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .git-blame-ignore-revs</span></code></pre></div>
<p>As of <a href="https://github.com/orgs/community/discussions/5033#discussioncomment-2318478" target="_blank">2022-03-08</a> GitHub will also <a href="https://docs.github.com/en/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view" target="_blank">ignore commits in the blame view</a> that are listed in <code>.git-blame-ignore-revs</code> providing this file is in the root of your project folder.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<section id="general" class="level3">
<h3 class="anchored" data-anchor-id="general">General</h3>
<ul>
<li><a href="https://www.atlassian.com/git/tutorials/inspecting-a-repository/git-blame" target="_blank">Atlassian | git blame</a></li>
</ul>
</section>
<section id="resources" class="level3">
<h3 class="anchored" data-anchor-id="resources">Resources</h3>
<ul>
<li><a href="https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame" target="_blank">Ignoring bulk change commits with git blame</a></li>
<li><a href="https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/#praise-people" target="_blank">Little things I like to do with Git</a></li>
<li><a href="https://stackoverflow.com/a/3959409/1444043" target="_blank">Is there a way to customize the output of git blame</a></li>
</ul>



</section>
</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2022,
  author = {Shephard, Neil},
  title = {Who’s to {Blame}},
  date = {2022-12-17},
  url = {https://blog.nshephard.dev/posts/whos_to_blame/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2022" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2022. <span>“Who’s to Blame.”</span> December 17, 2022.
<a href="https://blog.nshephard.dev/posts/whos_to_blame/">https://blog.nshephard.dev/posts/whos_to_blame/</a>.
</div></div></section></div> ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>blame</category>
  <guid>https://blog.nshephard.dev/posts/whos_to_blame/</guid>
  <pubDate>Sat, 17 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/52065067830_734d0ebd51_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pre-Commit : Customising and Updating</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/pre-commit-updates/</link>
  <description><![CDATA[ 





<p><a href="https://pre-commit.com/" target="_blank">Pre-commit</a> is a tool for running hooks prior to making commits to your Git history. If you’re not familiar with it then you may want to read the earlier post <a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">Pre-Commit : Protecting your future self</a>. This article discusses updating <code>pre-commit</code> and is prompted by a change in the <code>flake8</code> repository.</p>
<section id="pre-commit-hooks" class="level2">
<h2 class="anchored" data-anchor-id="pre-commit-hooks">Pre-commit hooks</h2>
<p>A lot of the power of <code>pre-commit</code> comes from the vast array of <a href="https://pre-commit.com/hooks.html" target="_blank">hooks</a> that are available that users make available. These are included under <code>repos:</code> section of the <code>.pre-commit-config.yaml</code> and typically require a minimum of the <code>repo:</code> and the <code>rev:</code> to use and then optionally a <code>hooks:</code> section. The <code>sample-config</code> that <code>pre-commit</code> will auto-generate looks like…</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pre-commit/pre-commit-hooks</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v4.3.0</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> trailing-whitespace</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> end-of-file-fixer</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-yaml</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-added-large-files</span></span></code></pre></div>
<p>After finding a repository and hook that you wish to use <a href="https://pre-commit.com/hooks.html" target="_blank">hooks</a> repository you need to add it to your <code>.pre-commit-config.yaml</code>. Here we add the <a href="https://github.com/PyCQA/pylint" target="_blank"><code>pylint</code></a> repository and whilst it only has one hook we explicitly add it.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pre-commit/pre-commit-hooks</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v4.3.0</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> trailing-whitespace</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> end-of-file-fixer</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-yaml</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-added-large-files</span></span>
<span id="cb2-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/PyCQA/pylint</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v2.15.5</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pylint</span></span></code></pre></div>
<p>If a repository has more than one <code>hook</code> available then it can be enabled by listing its <code>id:</code> as is the case in the <code>hooks</code> above for the <code>pre-commit-hooks</code> repository.</p>
</section>
<section id="local-hooks" class="level2">
<h2 class="anchored" data-anchor-id="local-hooks">Local Hooks</h2>
<p>In some instances the provisioned repositories do not always meet the requirements. One example of this is the <a href="https://github.com/pycqa/pylint" target="_blank">pylint action</a> which parses the code-base to detect errors using <a href="https://pylint.pycqa.org/en/latest/" target="_blank">pylint</a>. Typically most Python packages have their own dependencies but because the Pylint action pulls down and uses its own virtual environment these packages are not installed. As a consequence <code>pylint</code> reports a lot of <code>import-error</code> as its unable to import the required dependencies.</p>
<p>The solution to this is to write a local hook, which instead of defining a GitHub repository as the <code>repo:</code> uses the value <code>local</code>. Thus to run <code>pylint</code> in a local environment from <code>pre-commit</code> you would add the following to your <code>.pre-commit-config.yaml</code></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pre-commit/pre-commit-hooks</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v4.3.0</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> trailing-whitespace</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> end-of-file-fixer</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-yaml</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-added-large-files</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -   repo: https://github.com/PyCQA/pylint</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     rev: v2.15.5</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     hooks:</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     -   id: pylint</span></span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pylint</span></span>
<span id="cb3-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PyLint</span></span>
<span id="cb3-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">entry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> python -m pylint.__main__</span></span>
<span id="cb3-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">language</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> system</span></span>
<span id="cb3-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">files</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> \.py$</span></span></code></pre></div>
<p>For this to work you would have to ensure that you have a virtual environment activated that includes the package dependencies, including <code>pylint</code>, when you make you <code>git commit</code> so that <code>pre-commit</code> can find and import all the required packages.</p>
</section>
<section id="updating-pre-commit" class="level2">
<h2 class="anchored" data-anchor-id="updating-pre-commit">Updating <code>pre-commit</code></h2>
<p>After adding a new repo and hook it will not be immediately ready to use as the environment has not been initialised. You can wait until your next commit or force this with the <code>autoupdate</code> option. This will update <em>all</em> repositories that are defined in your configuration.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> pre-commit autoupdate</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Updating</span> https://github.com/pre-commit/pre-commit-hooks ... updating v3.2.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> v4.3.0.</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Updating</span> https://github.com/PyCQA/pylint ... <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> Initializing environment for https://github.com/PyCQA/pylint.</span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">already</span> up to date.</span></code></pre></div>
</section>
<section id="repository-changes" class="level2">
<h2 class="anchored" data-anchor-id="repository-changes">Repository Changes</h2>
<p>Sometimes, albeit rarely, repositories change their location as was the case recently when <a href="https://gitlab.com/PyCQA/flake8" target="_blank">flake8</a> moved from <a href="https://gitlab.com" target="_blank">GitLab</a> to <a href="https://github.com/PyCQA/flake8" target="_blank">GitHub</a>. As a consequence any <code>pre-commit</code> that uses <code>flake8</code> repo/hook and configured to run in Continuous Integration pipelines failed as it was unable to download and run the <code>flake8</code> environment. The solution is simply to update the <code>repo:</code>.</p>
<p>Before this change the entry for <code>flake8</code> looked like…</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://gitlab.com/pycqa/flake8.git</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9.2</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flake8</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">additional_dependencies</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flake8-print</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topostats"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tests"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>To update to use the new repository it should point to <code>github.com</code> as shown below.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pycqa/flake8.git</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9.2</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flake8</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">additional_dependencies</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flake8-print</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topostats"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tests"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>After making this change you have to <code>pre-commit autoupdate</code> to force downloading and updating from the new source, otherwise your existing older revision will be used locally.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://ns-rse.github.io/posts/pre-commit/" target="_blank">Pre-Commit : Protecting your future self</a></li>
<li><a href="https://pre-commit.com/" target="_blank">Pre-commit</a></li>
<li><a href="https://pre-commit.com/hooks.html" target="_blank">Pre-commit hooks</a></li>
<li><a href="https://github.com/PyCQA/pylint" target="_blank">pylint</a></li>
<li><a href="https://github.com/PyCQA/flake8" target="_blank">flake8</a></li>
</ul>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2022,
  author = {Shephard, Neil},
  title = {Pre-Commit : {Customising} and {Updating}},
  date = {2022-11-15},
  url = {https://blog.nshephard.dev/posts/pre-commit-updates/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2022" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2022. <span>“Pre-Commit : Customising and
Updating.”</span> November 15, 2022. <a href="https://blog.nshephard.dev/posts/pre-commit-updates/">https://blog.nshephard.dev/posts/pre-commit-updates/</a>.
</div></div></section></div> ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>linting</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>pre-commit</category>
  <guid>https://blog.nshephard.dev/posts/pre-commit-updates/</guid>
  <pubDate>Tue, 15 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/52358442614_416d014454_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pre-Commit : Protecting your future self</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/pre-commit/</link>
  <description><![CDATA[ 





<p><a href="https://pre-commit.com/" target="_blank">Pre-commit</a> is a powerful tool for executing a range of hooks prior to making commits to your Git history. This is useful because it means you can automatically run a range of linting tools on your code across an array of languages to ensure your code is up-to-scratch <em>before</em> you make the commit.</p>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>Pre-commit is written in Python but that isn’t a limitation as it will lint YAML, JSON, C, JavaScript, Go, Rust, TOML, Terraform, Jupyter Notebooks, and so on. The list of <a href="https://pre-commit.com/hooks.html" target="_blank">supported hooks</a> is vast.</p>
<p>For those unfamiliar with version control and Git in particular this will likely all sound alien. If you are new to the world of version control and Git I can highly recommend the <a href="https://srse-git-github-zero2hero.netlify.app/" target="_blank">Git &amp; Github through GitKraken Client - From Zero to Hero!</a> course offered by the <a href="https://rse.shef.ac.uk" target="_blank">Research Software Engineering</a> at the University of Sheffield and developed by Alumni <a href="https://www.r-rse.eu/" target="_blank">Anna Krystalli</a>.</p>
<section id="what-is-a-hook" class="level3">
<h3 class="anchored" data-anchor-id="what-is-a-hook">What is a “hook”?</h3>
<p>In computing a “hook” refers to something that is run prior to or in response to a requested action. In the context of the current discussion we are talking about hooks that relate to actions undertaken in Git version control and specifically actions that are run before a “commit” is made.</p>
<p>When you have initialised a directory to be under Git version control the settings and configuration are stored in the <code>.git/</code> sub-directory. There is the <code>.git/config</code> file for the repositories configuration but also the <code>.git/hooks/</code> directory that is populated with a host of <code>*.sample</code> files with various different names that give you an in-road into what different hooks you might want to run. Its worth spending a little time reading through these if you haven’t done so yet as they provide useful examples of how various hooks work.</p>
</section>
<section id="why-pre-commit-hooks" class="level3">
<h3 class="anchored" data-anchor-id="why-pre-commit-hooks">Why pre-commit hooks?</h3>
<p>Typically when writing code you should <a href="https://ns-rse.github.io/posts/linting/" target="_blank">lint</a> your code to ensure it conforms to agreed style guides and remove any “<a href="https://en.wikipedia.org/wiki/Code_smell" target="_blank">code smells</a>” that may be lingering (code that violates design principles). It won’t guarantee that your code is perfect but its a good starting point to improving it. People who write a lot of code have good habits of doing these checks manually prior to making commits. Experienced coders will have configured their Integrated Development Environment (IDE) to apply many such “hooks” on saving a file they have been working on.</p>
<p>At regular points in your workflow you save your work and check it into Git by making a commit and that is where <code>pre-commit</code> comes in to play because it will run all the hooks it has been configured to run against the files you are including in your commit. If any of the hooks fail then your commit is <em>not</em> made. In some cases <code>pre-commit</code> will automatically correct the errors (e.g.&nbsp;removing trailing white-space; applying <a href="https://github.com/psf/black" target="_blank">black</a> formatting if configured) but in others you have to correct them yourself before a commit can be successfully made.</p>
<p>Initially this can be jarring, but it saves you, and more importantly those who you are asking to review your code, time and effort. Your code meets the required style and is a little bit cleaner before being sent out for review. Long term linting your code is beneficial (see <a href="2022-04-19-linting" target="_blank">Linting - What is all the fluff about?</a>).</p>
</section>
</section>
<section id="installation" class="level2">
<h2 class="anchored" data-anchor-id="installation">Installation</h2>
<p>Pre-commit is written in Python and so you will need Python installed on your system in order to use it. Aside from that there is little else extra that is required to be manually installed as pre-commit installs virtual environments specific for each enabled hook.</p>
<p>Most systems provide <code>pre-commit</code> in their package management system but typically you should install <code>pre-commit</code> within your virtual environment or under your user account.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pre-commit</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge pre-commit</span></code></pre></div>
<p>If you are working on a Python project then you should include <code>pre-commit</code> as a requirement (either in <code>requirements-dev.txt</code>) or under the <code>dev</code> section of <code>[options.extras_require]</code> in your <code>setup.cfg</code> as shown below.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[options.extras_require]</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dev</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">pre-commit</span></span>
<span id="cb2-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">pytest</span></span>
<span id="cb2-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">pytest-cov</span></span></code></pre></div>
</section>
<section id="configuration" class="level2">
<h2 class="anchored" data-anchor-id="configuration">Configuration</h2>
<p>Configuration of pre-commit is via a file in the root of your Git version controlled directory called <code>.pre-commit-config.yaml</code>. This file should be included in your Git repository, you can create a blank file or <code>pre-commit</code> can generate a sample configuration for you.</p>
<pre class="{bash}"><code># Empty configuration
touch .pre-commit-config.yaml
# Auto-generate basic configuration
pre-commit sample-config &gt; .pre-commit-config.yaml
git add .pre-commit-config.yaml</code></pre>
<section id="hooks" class="level3">
<h3 class="anchored" data-anchor-id="hooks">Hooks</h3>
<p>Each hook is associated with a repository (<code>repo</code>) and a version (<code>rev</code>) within it. Many are available from the <code>https://github.com/pre-commit/pre-commit-hooks</code>. The default set of <code>pre-commit</code> hooks might look like the following.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pre-commit/pre-commit-hooks</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v4.3.0</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # Use the ref you want to point at</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> trailing-whitespace</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-docstring-first</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-case-conflict</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> end-of-file-fixer</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> requirements-txt-fixer</span></span>
<span id="cb4-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> check-yaml</span></span></code></pre></div>
</section>
<section id="hooks-from-external-repositories" class="level3">
<h3 class="anchored" data-anchor-id="hooks-from-external-repositories">Hooks from External Repositories</h3>
<p>Some hooks are available from dedicated repositories, for example the following runs <a href="https://github.com/psf/black" target="_blank">Black</a>, <a href="https://flake8.pycqa.org/en/latest/" target="_blank">Flake8</a> and <a href="https://pylint.pycqa.org/en/latest/" target="_blank">Pylint</a> on your code and should follow under the above (with the same level of indenting to be valid YAML).</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/psf/black</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.6.0</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> black</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://gitlab.com/pycqa/flake8.git</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9.2</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flake8</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">additional_dependencies</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flake8-print</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/pycqa/pylint</span></span>
<span id="cb5-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v2.15.3</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pylint</span></span></code></pre></div>
<p>An extensive list of <a href="https://pre-commit.com/hooks.html" target="_blank">supported hooks</a> is available. It lists the repository from which the hook is derived along with its name.</p>
</section>
<section id="local-hooks" class="level3">
<h3 class="anchored" data-anchor-id="local-hooks">Local Hooks</h3>
<p>You can also define <a href="https://pre-commit.com/#new-hooks" target="_blank">new hook</a> and configure them under the <code>- repo: local</code>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;id&gt;</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;descriptive name&gt;</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">language</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> python</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">entry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">types</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">python</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>For some examples of locally defined hooks see the <a href="https://github.com/pandas-dev/pandas/blob/main/.pre-commit-config.yaml" target="_blank">Pandas .pre-commit-config.yaml</a>.</p>
</section>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>Before <code>pre-commit</code> will run you need to install it within your repository. This puts the file <code>.git/hooks/pre-commit</code> in place that contains the hooks you have configured to run. To install this you should have your <code>.pre-commit-config.yaml</code> in place and then run the following.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pre-commit</span> install</span></code></pre></div>
<p>Once installed and configured there really isn’t much to be said for using <code>pre-commit</code>, just make commits and before you can make a successful commit <code>pre-commit</code> must run with all the hooks you have configured passing. By default <code>pre-commit</code> only runs on files that are staged and ready to be committed, if you have unstaged files these will be stashed prior to running the <code>pre-commit</code> hook and restored afterwards. Should you wish to run these manually without making a commit then, after activating a virtual environment if you are using one, simply make a <code>git commit</code> or you can run.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pre-commit</span> run</span></code></pre></div>
<p>If any of the configured hooks fail then the commit will not be made. Some hooks such as <a href="https://github.com/psf/black" target="_blank">black</a> may reformat files in place and you can then make another commit recording those changes and the hook should pass. Its important to pay close attention to the output.</p>
<p>If you want to run a specific hook you simply add the <code>&lt;id&gt;</code> after <code>run</code>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pre-commit</span> run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Or if you want to force running against all files (except unstaged ones) you can do so.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pre-commit</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all-files</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Across all files/hooks</span></span></code></pre></div>
<p>And these two options can be combined to run a specific hook against all files.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pre-commit</span> run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> --all-files</span></code></pre></div>
<p>You may find that you wish to switch branches to work on another feature or fix a bug but that your current work doesn’t pass the <code>pre-commit</code> and you don’t wish to sort that out immediately. The solution to this is to use <code>git stash</code> to temporarily save your current uncommitted work and restore the working directory and index to its previous state. You are then free to switch branches and work on another feature or fix a bug, commit and push those changes and then switch back.</p>
<p>Imagine you are working on branch <code>a</code> but are asked to fix a bug on branch <code>b</code>. You go to commit your work but find that <code>a</code> does not pass <code>pre-commit</code> but you wish to work on <code>b</code> anyway. Starting on branch <code>a</code> you stash your changes, switch branches, make and commit your changes to branch <code>b</code> then switch back to <code>a</code> and unstash your work there.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> stash</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout b</span>
<span id="cb12-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Work on branch b</span></span>
<span id="cb12-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>changed_files_on_branch_b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fixing bug on branch b"</span></span>
<span id="cb12-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb12-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout a</span>
<span id="cb12-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> stash apply</span></code></pre></div>
</section>
<section id="updating" class="level2">
<h2 class="anchored" data-anchor-id="updating">Updating</h2>
<p>You can update hooks locally by running <code>pre-commit autoupdate</code>. This will update your <code>.pre-commit-config.yaml</code> with the latest version of repositories you have configured and these will run both locally and if you use CI/CD as described below. However this will <em>not</em> update any packages that are part of the <code>- repo: local</code> that you may have implemented and it is your responsibility to handle these.</p>
</section>
<section id="pre-commit-cicd" class="level2">
<h2 class="anchored" data-anchor-id="pre-commit-cicd">Pre-commit CI/CD</h2>
<p>Ideally contributors will have setup their system to work with pre-commit and be running such checks prior to making pushes. It is however useful to enable running pre-commit as part of your Continuous Integration/Development pipeline (CI/CD). This can be done with both <a href="https://gitlab.com" target="_blank">GitLab</a> and <a href="https://github.com" target="_blank">GitHub</a> although similar methods are available for many <a href="https://pre-commit.com/#usage-in-continuous-integration" target="_blank">continuous integration systems</a>.</p>
<section id="github" class="level3">
<h3 class="anchored" data-anchor-id="github">GitHub</h3>
<p>GitHub actions reside in the <code>.github/workflows/</code> directory of your project. A simple pre-commit action is available on the Marketplace at <a href="https://github.com/marketplace/actions/pre-commit" target="_blank">pre-commit/action</a>. Copy this template to <code>.github/workflows/pre-commit.yml</code> and include it in your Git repository.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .github/workflows/pre-commit.yml</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adding pre-commit GitHub Action"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>
</section>
<section id="gitlab" class="level3">
<h3 class="anchored" data-anchor-id="gitlab">GitLab</h3>
<p>If you use GitLab the following article describes how to configure a CI job to run as part of your repository.</p>
<ul>
<li><a href="https://stackoverflow.com/collectives/gitlab/articles/71270196/how-to-use-pre-commit-to-automatically-correct-commits-and-merge-requests-with-g" target="_blank">How to use pre-commit to automatically correct commits and merge requests with GitLab CI</a></li>
</ul>
</section>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="https://pre-commit.com/" target="_blank">Pre-commit</a></li>
<li><a href="https://pre-commit.com/hooks.html" target="_blank">Supported hooks</a></li>
<li><a href="https://github.com/marketplace/actions/pre-commit" target="_blank">GitHub Action</a></li>
<li><a href="https://stackoverflow.com/collectives/gitlab/articles/71270196/how-to-use-pre-commit-to-automatically-correct-commits-and-merge-requests-with-g" target="_blank">GitLab CI</a></li>
</ul>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2022,
  author = {Shephard, Neil},
  title = {Pre-Commit : {Protecting} Your Future Self},
  date = {2022-08-28},
  url = {https://blog.nshephard.dev/posts/pre-commit/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2022" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2022. <span>“Pre-Commit : Protecting Your Future
Self.”</span> August 28, 2022. <a href="https://blog.nshephard.dev/posts/pre-commit/">https://blog.nshephard.dev/posts/pre-commit/</a>.
</div></div></section></div> ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>linting</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>pre-commit</category>
  <guid>https://blog.nshephard.dev/posts/pre-commit/</guid>
  <pubDate>Sun, 28 Aug 2022 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/52294716597_ea3be238c0_k.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Git : Custom SSH credentials for git repositories</title>
  <dc:creator>Neil Shephard</dc:creator>
  <link>https://blog.nshephard.dev/posts/git-ssh/</link>
  <description><![CDATA[ 





<p>How to configure individual Git repositories to use specific SSH keys. This is useful if you have more than one account on a forge, for example a personal and work account.</p>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>Typically when pushing and pulling changes to a forge such as <a href="https://github.com" target="_blank">GitHub</a>, <a href="https://gitlab.com" target="_blank">GitLab</a> or <a href="https://codeberg.org" target="_blank">Codeberg</a> you use an SSH (<em>S</em>ecure <em>SH</em>ell) key to authenticate that you have permission to access the repository.</p>
</section>
<section id="ssh-keys" class="level2">
<h2 class="anchored" data-anchor-id="ssh-keys">SSH Keys</h2>
<section id="concept" class="level3">
<h3 class="anchored" data-anchor-id="concept">Concept</h3>
<p>SSH keys are, in conjunction with “keychains”, used to save you having to enter a password each time you connect from one computer to another. They are generated on your computer and consist of two parts, a private key which remains on your computer and a public key which you place on remote computers you wish to connect to. There is a password associated with your key which is required to “unlock” your private key on your computer. Only an unlocked private key will match with a public key. Think of the public key as the lock on your front door, and the private key the key you carry on your traditional, physical, keychain/keyring. Only when the two match will things be unlocked, although you have to unlock your private key when you want to use it just as you have to get your keys out of your pocket (although “keychains” help with this).</p>
</section>
<section id="generation" class="level3">
<h3 class="anchored" data-anchor-id="generation">Generation</h3>
<p>There are different algorithms for generating SSH key pairs. DSA is no longer considered secure and RSA keys should have at least 2048-bits if not 4096-bits. A good choice these days is to use an elliptic curve based key such as ed25519 as they are shorter and faster. For more on why you should use this key see the article <a href="https://blog.g3rt.nl/upgrade-your-ssh-keys.html" target="_blank">Upgrade your SSH keys!</a>.</p>
<p>To generate a key use the following command entering a secure (i.e.&nbsp;<a href="xkcd.com/936/" target="_blank">long</a>) password.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh-keygen</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> 100 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ed25519</span></code></pre></div>
<p>You will be prompted for a filename to save your keys to, so you should know where to find them (the default is <code>~/.ssh/id_ed25519[.pub]</code>). You have a private key <code>~/.ssh/id_ed25519</code> and a public <code>~/.ssh/id_ed25519.pub</code> and we will use this to set up authentication on your Git Forge.</p>
</section>
<section id="forge-configuration" class="level3">
<h3 class="anchored" data-anchor-id="forge-configuration">Forge Configuration</h3>
<p>Under your account settings on your chosen Git Forge navigate to <em>Settings &gt; SSH and GPG Keys</em> and select <em>Add New Key</em> on (<a href="https://github.com/settings/keys" target="_blank">GitHub</a>). On GitLab navigate to <em>Preferences &gt; SSH Keys</em> <a href="https://gitlab.com/-/profile/keys" target="_blank">GitLab</a>), this page allows you to add a new key.</p>
<p>You need to copy and paste your public key into the <code>Key</code> box on these pages and give it a name (typically the hostname of your computer is a good choice). To view your public key simply use <code>cat</code> and copy and paste it. You can optionally choose to set an expiration date for your key which is good practice but means you have to generate new keys in the future.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> ~/.ssh/id_ed25519.pub</span></code></pre></div>
</section>
</section>
<section id="git-global-ssh-configuration" class="level2">
<h2 class="anchored" data-anchor-id="git-global-ssh-configuration">Git Global SSH Configuration</h2>
<p>Typically your global configuration for which key to use is set in <code>~/.ssh/config</code> with an entry similar to the below.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> github.com</span>
<span id="cb3-2">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> git</span>
<span id="cb3-3">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22</span>
<span id="cb3-4">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PreferredAuthentications</span> publickey</span>
<span id="cb3-5">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/id_ed25519</span></code></pre></div>
<p>Here it uses the User name <code>git</code> on port <code>22</code>. The preferred authentication method is using a <code>publickey</code> and the private key used is stored locally at <code>~/.ssh/id_ed25519</code>.</p>
<p>When asked to connect to a forge using SSH (e.g.&nbsp;<code>git pull</code> or <code>git push</code>) will look through the <code>~/.ssh/config</code> file to see if there is a configuration section that matches the target and if so use the configuration defined there-in. You will then be prompted for your SSH private key password.</p>
<section id="what-are-keychains" class="level3">
<h3 class="anchored" data-anchor-id="what-are-keychains">What are Keychains?</h3>
<p>You may be wondering how an SSH key makes your life easier, you are still prompted to enter a password when trying to interact with a Git Forge, or use it in a more traditional manner to connect over SSH to another server. This is where the magic of a “keychain” steps in to make your life easier, you still have to enter a password but only once to add your SSH key to the “keychain”. Typically keychains are front-ends for interacting with and managing <a href="https://www.ssh.com/academy/ssh/agent" target="_blank">SSH agent</a>. The name is apt since you add your SSH key to the keychain once, typically on log-in, and are asked for your password to unlock it and then stores it in the SSH agent. Then each time SSH requires an SSH key it retrieves it from the keychain rather than prompting you for a password.</p>
<p>There are many different implementations of keychain such as the <a href="https://www.funtoo.org/Funtoo:Keychain" target="_blank">Funtoo Keychain Project</a>, <a href="https://wiki.gnome.org/Apps/Seahorse" target="_blank">Seahorse</a> the GNOME GUI management tool,</p>
</section>
</section>
<section id="git-per-repository-configuration" class="level2">
<h2 class="anchored" data-anchor-id="git-per-repository-configuration">Git Per Repository Configuration</h2>
<p>We now get to the meat of this post, how to configure individual repositories to use specific SSH keys. This may be desirable if you have two accounts on the same forge e.g.&nbsp;both on GitHub.com or both on GitLab.com? As of Git 2.10.0 you can configure each repository to use a specific key (<a href="https://superuser.com/a/912281" target="_blank">source</a>). At the command line…</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> a/git/repository</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config core.sshCommand <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ssh -i ~/.ssh/work_ed25519 -F /dev/null"</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--local</span> user.name <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Username"</span></span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--local</span> user.email <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repos@username.com"</span></span></code></pre></div>
<p>This adds the following to the repositories configuration which is stored under <code>.git/config</code> and you can of course enter this directly to the configuration file yourself.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[core]</span></span>
<span id="cb5-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sshCommand</span> = ssh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ~/.ssh/work_ed25519 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F</span> /dev/null</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[user]</span></span>
<span id="cb5-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name</span> = Username</span>
<span id="cb5-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">email</span> = repos@username.com</span></code></pre></div>
<p>What is this doing? Well it’s instructing Git to run ssh using the private key file (with the <code>-i</code> flag to specify the <code>identity_file</code>) that is located at <code>~/.ssh/work_ed25519</code>. Providing you have…</p>
<ol type="a">
<li>Already uploaded the public key (<code>work_ed25519.pub</code>) to your GitHub account.</li>
<li>Stored this key in a Keychain as described above.</li>
</ol>
<p>…you shouldn’t be prompted for a password.</p>
<p>You can now configure, on a repository basis, which SSH key is used by Git when pushing/pulling changes from the remote <code>origin</code> (typically a forge such as GitHub, GitLab, Codeberg or so forth). If however you have multiple projects you wish to setup with an alternative SSH key configuration it can be tedious to configure each repository. Thankfully Git &gt;= 2.13 introduced <a href="https://git-scm.com/docs/git-config#_conditional_includes" target="_blank">Conditional includes</a> to the configuration.</p>
</section>
<section id="conditional-includes" class="level2">
<h2 class="anchored" data-anchor-id="conditional-includes">Conditional Includes</h2>
<p>You global configuration is stored in <code>~/.gitconfig</code> and defines key variables such <code>user</code> and <code>name</code>, the default <code>editor</code> and many other options, including a customised <code>sshCommand</code> as was added above to a local <code>.git/config</code> file.</p>
<p>Git 2.13 introduced the aforementioned <a href="https://git-scm.com/docs/git-config#_conditional_includes" target="_blank">Conditional includes</a> which works “_by setting a <code>includeIf.&lt;condition&gt;.path</code> variable to the name of the file to be included.”. For our current case-use the <code>&lt;condition&gt;</code> we are interested in is whether the <code>path</code>, which is interpreted as a pattern, is a <code>gitdir</code> then we include what follows.</p>
<p>For example, we place all of our work related Git repositories under the <code>~/work/</code> directory and wish to use <code>~/.ssh/work_ed25519</code> for these and keep all of our personal repositories elsewhere and wish to use our main <code>~/.ssh/id_ed25519</code> key for those.</p>
<p>Out <code>~/.gitconfig</code> should look like</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[user]</span></span>
<span id="cb6-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name</span> = Your Name</span>
<span id="cb6-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">email</span> = your.personal@email.com</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[includeIf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gitdir:~/work/"</span>]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Directory paths ending in '/** has the globbing wildcard '**' added by default.</span></span>
<span id="cb6-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> = ~/work/.gitconfig_work</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[core]</span></span>
<span id="cb6-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sshCommand</span> = ssh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ~/.ssh/id_ed25519 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F</span> /dev/null</span></code></pre></div>
<p>Then our <code>~/work/.gitconfig_work</code> can contain the alternative values we wish to use for all repositories under the <code>~/work/</code> directory.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[user]</span></span>
<span id="cb7-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name</span> = Your Name</span>
<span id="cb7-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">email</span> = your.work@email.com</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[core]</span></span>
<span id="cb7-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sshCommand</span> = ssh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ~/.ssh/work_ed25519 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F</span> /dev/null</span></code></pre></div>
</section>
<section id="commit-verification-with-ssh" class="level2">
<h2 class="anchored" data-anchor-id="commit-verification-with-ssh">Commit verification with SSH</h2>
<p>Verification of commits is a useful security feature, but beyond the scope of this article but as doing so with SSH keys is a recently supported feature on GitHub (see blog <a href="https://github.blog/changelog/2022-08-23-ssh-commit-verification-now-supported/" target="_blank">SSH commit verification now supported</a>) I felt it worth mentioning.</p>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<section id="ssh" class="level3">
<h3 class="anchored" data-anchor-id="ssh">SSH</h3>
<ul>
<li><a href="https://www.ssh.com/academy/ssh" target="_blank">SSH Academy</a></li>
<li><a href="https://www.funtoo.org/OpenSSH_Key_Management,_Part_1" target="_blank">OpenSSH Key Management, Part 1</a></li>
<li><a href="https://www.funtoo.org/OpenSSH_Key_Management,_Part_2" target="_blank">OpenSSH Key Management, Part 2</a></li>
<li><a href="https://www.funtoo.org/OpenSSH_Key_Management,_Part_3" target="_blank">OpenSSH Key Management, Part 3</a></li>
</ul>
</section>
<section id="forges" class="level3">
<h3 class="anchored" data-anchor-id="forges">Forges</h3>
<ul>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" target="_blank">GitHub | Connect with SSH</a></li>
<li><a href="https://docs.gitlab.com/ee/user/ssh.html" target="_blank">GitLab | Use SSH keys to communicate with GitLab</a></li>
<li><a href="https://docs.codeberg.org/security/ssh-key/" target="_blank">Codeberg | Adding an SSH key to your account</a></li>
</ul>



</section>
</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{shephard2022,
  author = {Shephard, Neil},
  title = {Git : {Custom} {SSH} Credentials for Git Repositories},
  date = {2022-08-28},
  url = {https://blog.nshephard.dev/posts/git-ssh/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-shephard2022" class="csl-entry quarto-appendix-citeas">
Shephard, Neil. 2022. <span>“Git : Custom SSH Credentials for Git
Repositories.”</span> August 28, 2022. <a href="https://blog.nshephard.dev/posts/git-ssh/">https://blog.nshephard.dev/posts/git-ssh/</a>.
</div></div></section></div> ]]></description>
  <category>ssh</category>
  <category>git</category>
  <category>github</category>
  <category>gitlab</category>
  <category>keychain</category>
  <guid>https://blog.nshephard.dev/posts/git-ssh/</guid>
  <pubDate>Sun, 28 Aug 2022 00:00:00 GMT</pubDate>
  <media:content url="https://live.staticflickr.com/65535/48816178863_85ee1fe7f1_k.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
